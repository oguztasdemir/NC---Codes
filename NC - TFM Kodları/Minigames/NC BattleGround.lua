-- Potion up, and start killing with your sticks!
local maps = {
  {n = "Beyond the boundary (Onkei)", Width = 4800, Height = 400,
    XML = '<C><P Ca="" F="8" L="4800" /><Z><S><S P="0,0,0.3,0.2,-90,0,0,0" L="40" X="960" c="3" Y="360" T="0" H="20" /><S X="790" L="40" H="30" c="3" Y="365" T="0" P="0,0,0.3,0.2,225,0,0,0" /><S H="10" L="40" X="1010" c="3" Y="345" T="0" P="0,0,0.3,0.2,-80,0,0,0" /><S H="12" L="40" X="450" c="3" Y="360" T="0" P="0,0,0.3,0.2,-190,0,0,0" /><S X="50" L="40" H="20" c="3" Y="365" T="0" P="0,0,0.3,0.2,-100,0,0,0" /><S P="0,0,0.3,0.2,-170,0,0,0" L="80" H="20" c="3" Y="360" T="0" X="895" /><S P="0,0,0.3,0.2,-130,0,0,0" L="80" H="20" c="3" Y="360" T="0" X="390" /><S H="20" L="80" X="240" c="3" Y="360" T="0" P="0,0,0.3,0.2,-190,0,0,0" /><S H="20" L="40" X="1060" c="3" Y="340" T="0" P="0,0,0.3,0.2,-90,0,0,0" /><S X="155" L="30" H="12" c="3" Y="355" T="0" P="0,0,0.3,0.2,-100,0,0,0" /><S X="1040" L="60" H="10" c="3" Y="345" T="0" P="0,0,0.3,0.2,-130,0,0,0" /><S P="0,0,0.3,0.2,-100,0,0,0" L="14" X="150" c="3" Y="340" T="0" H="30" /><S P="0,0,0.3,0.2,-160,0,0,0" L="40" X="135" c="3" Y="330" T="0" H="12" /><S P="0,0,0.3,0.2,-60,0,0,0" L="40" H="10" c="3" Y="310" T="0" X="1025" /><S P="0,0,0,0,50,0,0,0" L="120" H="30" c="3" Y="240" T="10" X="1900" /><S H="30" L="120" X="1700" c="3" Y="240" T="10" P="0,0,0,0,-50,0,0,0" /><S H="30" L="140" X="1800" c="3" Y="200" T="10" P="0,0,0.3,0,0,0,0,0" /><S X="1945" L="80" H="30" c="3" Y="355" T="10" P="0,0,0,0,-30,0,0,0" /><S P="0,0,0,0,30,0,0,0" L="80" H="30" c="3" Y="355" T="10" X="1655" /><S P="0,0,0,0,50,0,0,0" L="120" X="1510" c="3" Y="340" T="10" H="40" /><S P="0,0,0,0,-50,0,0,0" L="120" H="40" c="3" Y="340" T="10" X="1330" /><S P="0,0,0,0,50,0,0,0" L="120" H="40" c="3" Y="340" T="10" X="2270" /><S X="2170" L="80" H="30" c="3" Y="185" T="10" P="0,0,0,0,50,0,0,0" /><S P="0,0,0,0,-50,0,0,0" L="120" X="2090" c="3" Y="340" T="10" H="40" /><S P="0,0,0,0,50,0,0,0" L="80" X="1600" c="3" Y="185" T="10" H="30" /><S X="1430" L="80" H="30" c="3" Y="185" T="10" P="0,0,0,0,-50,0,0,0" /><S P="0,0,0.3,0,0,0,0,0" L="120" H="40" c="3" Y="340" T="10" X="1270" /><S P="0,0,0.3,0,0,0,0,0" L="120" X="1570" c="3" Y="340" T="10" H="40" /><S P="0,0,0.3,0,0,0,0,0" L="120" H="40" c="3" Y="340" T="10" X="2030" /><S P="0,0,0.3,0,0,0,0,0" L="140" H="30" c="3" Y="295" T="10" X="2180" /><S P="0,0,0.3,0,0,0,0,0" L="120" X="2330" c="3" Y="340" T="10" H="40" /><S P="0,0,0.3,0,0,0,0,0" L="140" X="1420" c="3" Y="295" T="10" H="30" /><S P="0,0,0,0,-50,0,0,0" L="80" H="30" c="3" Y="185" T="10" X="2000" /><S X="2085" L="140" H="30" c="3" Y="160" T="10" P="0,0,0.3,0,0,0,0,0" /><S P="0,0,0.3,0,0,0,0,0" L="140" X="1515" c="3" Y="160" T="10" H="30" /><S P="0,0,0.3,0.2,140,0,0,0" L="10" H="20" c="3" Y="355" T="0" X="2860" /><S P="0,0,0.3,0.2,220,0,0,0" L="60" X="2430" c="3" Y="350" T="0" H="12" /><S P="0,0,0.3,0.2,-40,0,0,0" L="10" X="3170" c="3" Y="355" T="0" H="40" /><S P="0,0,0.3,0.2,40,0,0,0" L="10" X="2830" c="3" Y="355" T="0" H="20" /><S P="0,0,0.3,0.2,20,0,0,0" L="10" X="3235" c="3" Y="350" T="0" H="40" /><S X="3300" L="40" H="20" c="3" Y="370" T="0" P="0,0,0.3,0.2,250,0,0,0" /><S P="0,0,0.3,0.2,-190,0,0,0" L="10" X="3575" c="3" Y="360" T="0" H="60" /><S P="0,0,0.3,0.2,-40,0,0,0" L="10" X="2575" c="3" Y="350" T="0" H="50" /><S X="3259" L="10" H="40" c="3" Y="360" T="0" P="0,0,0.3,0.2,20,0,0,0" /><S P="0,0,0.3,0.2,250,0,0,0" L="40" H="20" c="3" Y="345" T="0" X="2750" /><S P="0,0,0.3,0.2,170,0,0,0" L="30" X="2630" c="3" Y="360" T="0" H="20" /><S H="20" L="30" X="3390" c="3" Y="365" T="0" P="0,0,0.3,0.2,170,0,0,0" /><S P="0,0,0.3,0.2,20,0,0,0" L="10" H="40" c="3" Y="345" T="0" X="3310" /><S H="12" L="60" X="3460" c="3" Y="355" T="0" P="0,0,0.3,0.2,200,0,0,0" /><S X="3140" L="10" H="40" c="3" Y="365" T="0" P="0,0,0.3,0.2,-60,0,0,0" /><S P="0,0,0.3,0.2,10,0,0,0" L="10" H="50" c="3" Y="340" T="0" X="2560" /><S P="0,0,0.3,0.2,0,0,0,0" L="10" X="3430" c="3" Y="360" T="0" H="40" /><S H="20" L="10" X="2845" c="3" Y="350" T="0" P="0,0,0.3,0.2,70,0,0,0" /><S H="40" P="0,0,0.3,0.2,10,0,0,0" L="120" X="4145" c="3" Y="235" T="6" /><S P="0,0,0,0,0,0,0,0" H="40" L="40" X="4555" c="3" Y="265" T="6" /><S P="0,0,0.3,0.2,10,0,0,0" H="40" L="80" X="3645" c="3" Y="255" T="6" /><S P="0,0,0,0,50,0,0,0" H="40" L="80" X="4220" c="3" Y="270" T="6" /><S P="0,0,0.3,0.2,20,0,0,0" X="4735" L="80" H="40" c="3" Y="350" T="6" /><S P="0,0,0,0,-20,0,0,0" H="40" L="120" X="3730" c="3" Y="360" T="6" /><S X="3800" P="0,0,0,0,40,0,0,0" L="120" H="40" c="3" Y="340" T="6" /><S H="40" P="0,0,0,0,-10,0,0,0" L="120" X="4635" c="3" Y="350" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" X="4445" L="80" H="40" c="3" Y="360" T="6" /><S P="0,0,0,0,20,0,0,0" H="40" L="120" X="3670" c="3" Y="360" T="6" /><S X="4485" P="0,0,0,0,45,0,0,0" L="40" H="40" c="3" Y="370" T="6" /><S P="0,0,0,0,20,0,0,0" H="40" L="120" X="4040" c="3" Y="360" T="6" /><S P="0,0,0,0,30,0,0,0" H="40" L="120" X="4380" c="3" Y="350" T="6" /><S H="40" P="0,0,0,0,-40,0,0,0" L="80" X="4330" c="3" Y="355" T="6" /><S P="0,0,0,0,-10,0,0,0" H="40" L="120" X="3970" c="3" Y="370" T="6" /><S P="0,0,0,0,-60,0,0,0" X="4710" L="120" H="40" c="3" Y="300" T="6" /><S X="4730" P="0,0,0,0,-100,0,0,0" L="200" H="40" c="3" Y="165" T="6" /><S X="4585" P="0,0,0.3,0.2,10,0,0,0" L="80" H="40" c="3" Y="235" T="6" /><S P="0,0,0.3,0.2,50,0,0,0" H="40" L="160" X="4700" c="3" Y="50" T="6" /><S H="40" P="0,0,0,0,-10,0,0,0" L="120" X="4495" c="3" Y="240" T="6" /><S P="0,0,0.3,0.2,10,0,0,0" H="40" L="80" X="3840" c="3" Y="235" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" X="3935" L="120" H="40" c="3" Y="240" T="6" /><S P="0,0,0.3,0.2,-10,0,0,0" H="40" L="80" X="4345" c="3" Y="225" T="6" /><S X="1500" P="0,0,0,0,0,0,0,0" L="3000" o="6a7495" H="10" c="3" Y="-5" T="12" /><S P="0,0,0,0,0,0,0,0" H="10" L="1800" o="6a7495" X="3900" c="3" Y="-5" T="12" /><S P="0,0,0,0,0,0,0,0" H="400" L="10" o="6a7495" X="-5" c="3" Y="200" T="12" /><S X="4805" P="0,0,0,0,0,0,0,0" L="10" o="6a7495" H="400" c="3" Y="200" T="12" /><S H="40" P="0,0,0.3,0.2,0,0,0,0" L="2400" X="1200" Y="380" T="6" /><S X="3600" P="0,0,0.3,0.2,0,0,0,0" L="2400" H="40" Y="380" T="6" /></S><D /><O><O P="0" C="11" Y="320" X="40" /><O X="780" C="11" Y="310" P="0" /><O P="0" C="11" Y="285" X="1060" /><O X="1860" C="11" Y="330" P="0" /><O P="0" C="11" Y="155" X="1390" /><O X="2100" C="11" Y="120" P="0" /><O P="0" C="11" Y="320" X="2630" /><O X="3460" C="11" Y="310" P="0" /><O P="0" C="11" Y="335" X="2990" /><O P="0" C="11" Y="185" X="4590" /><O X="4125" C="11" Y="320" P="0" /><O P="0" C="11" Y="185" X="3840" /></O></Z></C>'},
  {n = "Layering Plains (Onkei)", Width = 4800, Height = 400,
    XML = '<C><P L="4800" Ca="" F="7" /><Z><S><S P="0,0,0,0,-70,0,0,0" X="575" L="20" H="100" c="3" Y="250" T="0" /><S X="630" P="0,0,0,0,50,0,0,0" L="80" H="20" c="3" Y="270" T="6" /><S P="0,0,0.3,0.2,10,0,0,0" H="20" L="80" X="615" c="3" Y="355" T="6" /><S X="875" P="0,0,0.3,0.2,0,0,0,0" L="80" H="20" c="3" Y="335" T="6" /><S P="0,0,0,0,6,0,0,0" H="20" L="120" X="925" c="3" Y="355" T="6" /><S H="20" P="0,0,0.3,0.2,0,0,0,0" L="80" X="95" c="3" Y="195" T="6" /><S H="40" P="0,0,0,0,45,0,0,0" L="40" X="40" c="3" Y="350" T="0" /><S H="80" P="0,0,0,0,60,0,0,0" L="30" X="205" c="3" Y="365" T="0" /><S P="0,0,0,0,-80,0,0,0" X="335" L="30" H="220" c="3" Y="365" T="0" /><S P="0,0,0.3,0.2,-140,0,0,0" X="460" L="20" H="60" c="3" Y="30" T="0" /><S X="40" P="0,0,0.3,0.2,10,0,0,0" L="30" H="260" c="3" Y="235" T="0" /><S P="0,0,0,0,25,0,0,0" X="695" L="40" H="40" c="3" Y="360" T="0" /><S H="20" P="0,0,0.3,0.2,-5,0,0,0" L="80" X="350" c="3" Y="355" T="6" /><S H="20" P="0,0,0.3,0.2,75,0,0,0" L="40" X="195" c="3" Y="190" T="6" /><S P="0,0,0.3,0.2,-15,0,0,0" H="20" L="80" X="165" c="3" Y="185" T="6" /><S P="0,0,0,0,0,0,0,0" H="30" L="10" X="1155" c="3" Y="345" T="0" /><S P="0,0,0.3,0.2,60,0,0,0" H="220" L="30" X="150" c="3" Y="60" T="0" /><S H="220" P="0,0,0.3,0.2,-80,0,0,0" L="30" X="340" c="3" Y="25" T="0" /><S P="0,0,0.3,0.2,25,0,0,0" X="350" L="120" H="20" c="3" Y="270" T="6" /><S X="500" P="0,0,0,0,0,0,0,0" L="10" H="30" c="3" Y="345" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" X="420" L="80" H="20" c="3" Y="170" T="6" /><S P="0,0,0,0,0,0,0,0" H="30" L="10" X="580" c="3" Y="345" T="0" /><S X="225" P="0,0,0,0,-110,0,0,0" L="20" H="220" c="3" Y="270" T="0" /><S P="0,0,0,0,-50,0,0,0" H="100" L="20" X="355" c="3" Y="265" T="0" /><S H="100" P="0,0,0,0,-80,0,0,0" L="20" X="171" c="3" Y="205" T="0" /><S P="0,0,0,0,-120,0,0,0" X="310" L="20" H="100" c="3" Y="135" T="0" /><S X="380" P="0,0,0.3,0.2,45,0,0,0" L="40" H="40" c="3" Y="185" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" X="840" L="80" H="20" c="3" Y="350" T="6" /><S H="100" P="0,0,0,0,-50,0,0,0" L="20" X="490" c="3" Y="200" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" H="40" L="30" X="1590" c="3" Y="225" T="0" /><S P="0,0,0,0,20,0,0,0" H="20" L="40" X="1810" c="3" Y="185" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" X="1785" L="12" H="40" c="3" Y="170" T="0" /><S P="0,0,0,0,-10,0,0,0" H="40" L="120" X="2290" c="3" Y="350" T="6" /><S P="0,0,0,0,0,0,0,0" H="20" L="80" X="1305" c="3" Y="350" T="6" /><S P="0,0,0.3,0.2,10,0,0,0" H="40" L="12" X="2285" c="3" Y="310" T="0" /><S P="0,0,0.3,0.2,40,0,0,0" H="40" L="12" X="1345" c="3" Y="350" T="0" /><S P="0,0,0,0,10,0,0,0" X="1689" L="200" H="40" c="3" Y="355" T="6" /><S P="0,0,0,0,0,0,0,0" X="1610" L="40" H="20" c="3" Y="225" T="6" /><S P="0,0,0.3,0.2,-10,0,0,0" X="1375" L="12" H="40" c="3" Y="350" T="0" /><S P="0,0,0,0,-20,0,0,0" X="1540" L="120" H="30" c="3" Y="340" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" X="1600" L="150" H="30" c="3" Y="345" T="0" /><S P="0,0,0,0,-50,0,0,0" X="1725" L="40" H="30" c="3" Y="210" T="0" /><S P="0,0,0,0,50,0,0,0" X="1875" L="40" H="30" c="3" Y="210" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" X="1800" L="150" H="30" c="3" Y="200" T="0" /><S P="0,0,0,0,10,0,0,0" X="1965" L="120" H="50" c="3" Y="345" T="6" /><S P="0,0,0,0,40,0,0,0" H="30" L="80" X="2180" c="3" Y="250" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" X="2000" L="150" H="30" c="3" Y="345" T="0" /><S P="0,0,,,,0,0,0" L="250" H="20" X="1800" Y="350" T="9" /><S P="0,0,0,0,-40,0,0,0" H="30" L="80" X="1470" c="3" Y="275" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" H="30" L="150" X="1565" c="3" Y="250" T="0" /><S P="0,0,0,0,-10,0,0,0" X="2020" L="80" H="30" c="3" Y="230" T="6" /><S P="0,0,0.3,0.2,10,0,0,0" X="2110" L="120" H="30" c="3" Y="235" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" H="30" L="150" X="2225" c="3" Y="345" T="0" /><S P="0,0,0,0,40,0,0,0" X="3550" L="30" H="12" c="3" Y="355" T="0" /><S P="0,0,0,0,10,0,0,0" H="50" L="15" X="3380" c="3" Y="335" T="0" /><S P="0,0,0,0,-240,0,0,0" X="3345" L="50" H="12" c="3" Y="340" T="0" /><S P="0,0,0,0,80,0,0,0" X="3085" L="50" H="12" c="3" Y="350" T="0" /><S H="12" P="0,0,0,0,60,0,0,0" L="50" X="3150" c="3" Y="340" T="0" /><S P="0,0,0,0,-40,0,0,0" H="20" L="50" X="3135" c="3" Y="350" T="0" /><S X="2850" P="0,0,0,0,-10,0,0,0" L="15" H="40" c="3" Y="340" T="0" /><S H="40" P="0,0,0,0,10,0,0,0" L="15" X="3405" c="3" Y="345" T="0" /><S X="2690" P="0,0,0,0,10,0,0,0" L="40" H="20" c="3" Y="355" T="0" /><S X="2510" P="0,0,0.3,0.2,10,0,0,0" L="10" H="40" c="3" Y="345" T="0" /><S P="0,0,0.3,0.2,-10,0,0,0" X="2575" L="10" H="40" c="3" Y="340" T="0" /><S X="2875" P="0,0,0.3,0.2,0,0,0,0" L="10" H="30" c="3" Y="345" T="0" /><S P="0,0,0,0,-120,0,0,0" H="20" L="40" X="3310" c="3" Y="345" T="0" /><S P="0,0,0.3,0.2,10,0,0,0" H="40" L="10" X="2525" c="3" Y="315" T="0" /><S H="40" P="0,0,0.3,0.2,-20,0,0,0" L="10" X="2550" c="3" Y="305" T="0" /><S H="20" P="0,0,0,0,-200,0,0,0" L="40" X="3335" c="3" Y="330" T="0" /><S P="0,0,0,0,-45,0,0,0" X="4185" L="40" H="40" c="3" Y="225" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" X="4100" L="240" H="30" c="3" Y="240" T="6" /><S P="0,0,0,0,-45,0,0,0" X="3705" L="40" H="40" c="3" Y="360" T="0" /><S P="0,0,0,0,20,0,0,0" X="4195" L="30" H="50" c="3" Y="350" T="0" /><S P="0,0,0,0,-20,0,0,0" H="20" L="100" X="3895" c="3" Y="355" T="0" /><S P="0,0,0.3,0.2,-20,0,0,0" H="30" L="40" X="4170" c="3" Y="355" T="6" /><S P="0,0,0.3,0.2,20,0,0,0" H="30" L="120" X="4000" c="3" Y="355" T="6" /><S P="0,0,0,0,-45,0,0,0" H="20" L="80" X="4770" c="3" Y="335" T="0" /><S P="0,0,0,0,-45,0,0,0" X="4400" L="50" H="50" c="3" Y="355" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" X="4550" L="480" H="30" c="3" Y="370" T="0" /><S P="0,0,0,0,-45,0,0,0" H="20" L="60" X="4405" c="3" Y="110" T="0" /><S P="0,0,0.3,0.2,-70,0,0,0" X="3935" L="80" H="30" c="3" Y="335" T="6" /><S P="0,0,0,0,45,0,0,0" H="20" L="60" X="4325" c="3" Y="175" T="0" /><S P="0,0,0,0,-45,0,0,0" H="40" L="40" X="4600" c="3" Y="255" T="0" /><S P="0,0,0,0,-135,0,0,0" X="4595" L="60" H="20" c="3" Y="110" T="0" /><S P="0,0,0.3,0.2,0,0,0,0" L="2400" X="3600" H="40" Y="380" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" H="30" L="240" X="4580" c="3" Y="270" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" H="30" L="120" X="4730" c="3" Y="170" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" H="30" L="160" X="4500" c="3" Y="95" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" H="30" L="120" X="4400" c="3" Y="200" T="6" /><S P="0,0,0.3,0.2,-20,0,0,0" X="3820" L="120" H="30" c="3" Y="285" T="6" /><S P="0,0,0.3,0.2,0,0,0,0" L="2400" X="1200" H="40" Y="380" T="6" /><S H="10" P="0,0,0,0,0,0,0,0" L="3000" o="6a7495" X="1500" c="3" Y="-5" T="12" /><S P="0,0,0,0,0,0,0,0" X="3900" L="1800" o="6a7495" H="10" c="3" Y="-5" T="12" /><S P="0,0,0,0,0,0,0,0" H="400" L="10" o="6a7495" X="4805" c="3" Y="200" T="12" /><S P="0,0,0,0,0,0,0,0" X="-5" L="10" o="6a7495" H="400" c="3" Y="200" T="12" /></S><D /><O><O X="100" C="11" Y="160" P="0" /><O X="345" C="11" Y="315" P="0" /><O X="570" C="11" Y="205" P="0" /><O X="1530" C="11" Y="205" P="0" /><O X="1860" C="11" Y="335" P="0" /><O X="2320" C="11" Y="300" P="0" /><O X="2610" C="11" Y="330" P="0" /><O X="3560" C="11" Y="325" P="0" /><O X="3110" C="11" Y="320" P="0" /><O X="4480" C="11" Y="60" P="0" /><O X="4680" C="11" Y="330" P="0" /><O X="3870" C="11" Y="320" P="0" /></O></Z></C>'},
  {n = "Life in the ruins (Bawrbow)", Width = 4800, Height = 400,
    XML = '<C><P L="4800" Ca="" F="8" /><Z><S><S H="20" L="120" X="1060" c="3" Y="360" T="0" P="0,0,0,0,190,0,0,0" /><S P="0,0,0,0,170,0,0,0" L="40" X="550" c="3" Y="205" T="0" H="12" /><S P="0,0,0,0,70,0,0,0" L="40" H="12" c="3" Y="345" T="0" X="415" /><S H="20" L="40" X="615" c="3" Y="355" T="0" P="0,0,0,0,20,0,0,0" /><S P="0,0,0,0,45,0,0,0" L="30" X="960" c="3" Y="250" T="0" H="30" /><S c="3" L="100" H="20" X="210" Y="345" T="0" P="0,0,0,0,-5,0,0,0" /><S c="3" L="60" X="670" H="25" Y="245" T="10" P="0,0,0,0,50,0,0,0" /><S c="3" L="200" X="560" H="30" Y="220" T="10" P="0,0,0,0,5,0,0,0" /><S L="150" X="180" H="30" Y="345" T="9" P="0,0,,,,0,0,0" /><S L="20" X="265" H="200" Y="265" T="9" P="0,0,,,,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="160" H="40" c="3" N="" Y="355" T="10" X="150" /><S P="0,0,0,0,-20,0,0,0" L="80" H="40" c="3" N="" Y="355" T="10" X="250" /><S L="90" X="320" H="20" Y="175" T="9" P="0,0,,,,0,0,0" /><S P="0,0,0,0,-15,0,0,0" L="80" X="340" c="3" N="" Y="190" T="10" H="40" /><S P="0,0,0,0,15,0,0,0" L="40" H="40" c="3" N="" Y="195" T="10" X="290" /><S c="3" L="80" X="800" H="30" Y="200" T="10" P="0,0,0.3,0.2,-10,0,0,0" /><S c="3" L="200" H="30" X="1000" Y="260" T="10" P="0,0,0,0,-5,0,0,0" /><S c="3" L="20" X="740" H="20" Y="315" T="10" P="0,0,0.3,0.2,30,0,0,0" /><S X="405" L="40" H="12" c="3" Y="340" T="0" P="0,0,0,0,80,0,0,0" /><S c="3" L="20" H="20" X="825" Y="280" T="10" P="0,0,0.3,0.2,-20,0,0,0" /><S c="3" L="20" X="820" H="20" Y="355" T="10" P="0,0,0.3,0.2,10,0,0,0" /><S P="0,0,0,0,180,0,0,0" L="280" H="100" c="4" Y="320" T="10" X="1800" /><S H="30" L="200" X="2140" c="4" Y="345" T="10" P="0,0,0.3,0.2,180,0,0,0" /><S P="0,0,0.3,0.2,180,0,0,0" L="200" X="1460" c="4" Y="345" T="10" H="30" /><S H="40" L="20" X="1440" c="4" Y="345" T="0" P="0,0,0.3,0.2,-10,0,0,0" /><S P="0,0,0,0,80,0,0,0" L="40" H="20" c="3" Y="345" T="0" X="2320" /><S P="0,0,0.3,0.2,-10,0,0,0" L="20" X="1500" c="4" Y="345" T="0" H="40" /><S X="2180" L="20" H="40" c="4" Y="345" T="0" P="0,0,0.3,0.2,-10,0,0,0" /><S X="1305" L="40" H="20" c="3" Y="360" T="0" P="0,0,0,0,-160,0,0,0" /><S P="0,0,0.3,0.2,-10,0,0,0" L="20" H="40" c="4" Y="345" T="0" X="2090" /><S H="90" L="20" X="1840" c="4" Y="325" T="0" P="0,0,0.3,0.2,-10,0,0,0" /><S P="0,0,0.3,0.2,-10,0,0,0" L="20" X="1700" c="4" Y="325" T="0" H="90" /><S P="0,0,0,0,-50,0,0,0" L="40" H="20" c="3" Y="360" T="0" X="1975" /><S X="1940" L="40" H="40" c="3" Y="285" T="10" P="0,0,0,0,-45,0,0,0" /><S P="0,0,0,0,45,0,0,0" L="40" H="40" c="3" Y="285" T="10" X="1660" /><S H="30" L="280" X="1800" c="3" Y="270" T="10" P="0,0,0,0,0,0,0,0" /><S X="1460" L="160" H="30" c="3" Y="315" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S H="20" L="40" X="1640" c="3" Y="360" T="0" P="0,0,0,0,10,0,0,0" /><S H="30" L="120" X="1460" c="3" Y="285" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S X="1460" L="80" H="30" c="3" Y="255" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S H="30" L="160" X="2140" c="3" Y="315" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S X="2140" L="120" H="30" c="3" Y="285" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S H="30" L="80" X="2140" c="3" Y="255" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S L="1200" X="1800" H="40" Y="380" T="6" P="0,0,0.3,0.2,0,0,0,0" /><S H="20" L="40" X="2495" c="3" Y="350" T="6" P="0,0,0.3,0.2,-50,0,0,0" /><S X="2600" L="10" H="60" c="3" Y="350" T="1" P="0,0,0,0,55,0,0,0" /><S X="2825" L="10" H="50" c="3" Y="330" T="1" P="0,0,0,0,-25,0,0,0" /><S P="0,0,0,0,15,0,0,0" L="10" H="60" c="3" Y="340" T="1" X="2805" /><S H="20" L="120" X="2780" c="3" Y="355" T="6" P="0,0,0.3,0.2,0,0,0,0" /><S H="20" L="40" X="2955" c="3" Y="355" T="1" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0.3,0.2,10,0,0,0" L="40" X="2990" c="3" Y="355" T="6" H="20" /><S P="0,0,0,0,100,0,0,0" L="40" H="20" c="3" Y="345" T="1" X="2625" /><S H="60" L="10" X="3160" c="3" Y="310" T="1" P="0,0,0,0,15,0,0,0" /><S P="0,0,0.3,0.2,40,0,0,0" L="120" X="3220" c="3" Y="340" T="6" H="20" /><S c="3" L="120" H="20" X="3140" Y="350" T="6" P="0,0,0.3,0.2,-20,0,0,0" /><S P="0,0,0,0,-30,0,0,0" L="40" X="3375" c="3" Y="350" T="1" H="30" /><S c="3" L="160" H="20" X="3450" Y="365" T="1" P="0,0,0,0,10,0,0,0" /><S P="0,0,0,0,-25,0,0,0" L="10" H="50" c="3" Y="305" T="1" X="3180" /><S X="4440" L="80" H="20" c="3" Y="360" T="6" P="0,0,0,0,10,0,0,0" /><S X="4160" L="10" H="45" c="3" Y="350" T="1" P="0,0,0,0.2,45,0,0,0" /><S H="45" L="10" X="4180" c="3" Y="325" T="1" P="0,0,0,0.2,30,0,0,0" /><S X="4195" L="10" H="45" c="3" Y="290" T="1" P="0,0,0,0.2,15,0,0,0" /><S H="45" L="10" X="4205" c="3" Y="290" T="1" P="0,0,0,0.2,-15,0,0,0" /><S H="45" L="10" X="4240" c="3" Y="350" T="1" P="0,0,0,0.2,-45,0,0,0" /><S X="3750" L="40" H="20" c="3" Y="365" T="6" P="0,0,0,0,40,0,0,0" /><S X="4220" L="10" H="45" c="3" Y="325" T="1" P="0,0,0,0.2,-30,0,0,0" /><S H="45" L="10" X="4560" c="3" Y="350" T="1" P="0,0,0,0.2,45,0,0,0" /><S P="0,0,0,0,70,0,0,0" L="40" H="20" c="3" Y="345" T="6" X="4480" /><S X="4640" L="10" H="45" c="3" Y="350" T="1" P="0,0,0,0.2,-45,0,0,0" /><S H="45" L="10" X="3760" c="3" Y="350" T="1" P="0,0,0,0.2,45,0,0,0" /><S X="3840" L="10" H="45" c="3" Y="350" T="1" P="0,0,0,0.2,-45,0,0,0" /><S X="4395" L="10" H="45" c="3" Y="140" T="1" P="0,0,0,0.2,15,0,0,0" /><S P="0,0,0,0.2,30,0,0,0" L="10" H="45" c="3" Y="175" T="1" X="4380" /><S H="45" L="10" X="4405" c="3" Y="140" T="1" P="0,0,0,0.2,-15,0,0,0" /><S H="45" L="10" X="4595" c="3" Y="290" T="1" P="0,0,0,0.2,15,0,0,0" /><S H="45" L="10" X="4420" c="3" Y="175" T="1" P="0,0,0,0.2,-30,0,0,0" /><S H="20" L="40" X="3965" c="3" Y="360" T="6" P="0,0,0.3,0.2,-20,0,0,0" /><S X="4605" L="10" H="45" c="3" Y="290" T="1" P="0,0,0,0.2,-15,0,0,0" /><S H="45" L="10" X="4620" c="3" Y="325" T="1" P="0,0,0,0.2,-30,0,0,0" /><S X="4580" L="10" H="45" c="3" Y="325" T="1" P="0,0,0,0.2,30,0,0,0" /><S H="45" L="10" X="3995" c="3" Y="140" T="1" P="0,0,0,0.2,15,0,0,0" /><S H="45" L="10" X="4005" c="3" Y="140" T="1" P="0,0,0,0.2,-15,0,0,0" /><S X="4020" L="10" H="45" c="3" Y="175" T="1" P="0,0,0,0.2,-30,0,0,0" /><S H="45" L="10" X="3980" c="3" Y="175" T="1" P="0,0,0,0.2,30,0,0,0" /><S H="45" L="10" X="3795" c="3" Y="290" T="1" P="0,0,0,0.2,15,0,0,0" /><S X="3805" L="10" H="45" c="3" Y="290" T="1" P="0,0,0,0.2,-15,0,0,0" /><S H="45" L="10" X="3820" c="3" Y="325" T="1" P="0,0,0,0.2,-30,0,0,0" /><S X="3780" L="10" H="45" c="3" Y="325" T="1" P="0,0,0,0.2,30,0,0,0" /><S X="3960" L="120" H="20" c="3" Y="195" T="6" P="0,0,0.3,0.2,-40,0,0,0" /><S H="20" L="120" X="4040" c="3" Y="195" T="6" P="0,0,0.3,0.2,40,0,0,0" /><S P="0,0,0.3,0.2,40,0,0,0" L="120" H="20" c="3" Y="195" T="6" X="4440" /><S P="0,0,0.3,0.2,-40,0,0,0" L="120" X="4360" c="3" Y="195" T="6" H="20" /><S P="0,0,0.3,0.2,0,0,0,0" L="40" H="20" c="3" Y="350" T="6" X="4720" /><S P="0,0,0.05,0.1,0,0,0,0" L="2400" X="1200" N="" Y="380" T="11" H="40" /><S L="2400" X="3600" H="40" N="" Y="380" T="11" P="0,0,0.05,0.1,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="3000" o="6a7495" X="1500" c="3" Y="-5" T="12" H="10" /><S H="10" L="1800" o="6a7495" X="3900" c="3" Y="-5" T="12" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="10" o="6a7495" X="-5" c="3" Y="200" T="12" H="400" /><S H="400" L="10" o="6a7495" X="4805" c="3" Y="200" T="12" P="0,0,0,0,0,0,0,0" /></S><D /><O><O C="11" Y="205" P="0" X="1035" /><O C="11" Y="135" X="325" P="0" /><O C="11" Y="330" P="0" X="480" /><O C="11" Y="225" P="0" X="1800" /><O C="11" Y="240" X="2240" P="0" /><O C="11" Y="325" P="0" X="1305" /><O C="11" Y="320" P="0" X="2760" /><O C="11" Y="335" X="3330" P="0" /><O C="11" Y="245" P="0" X="3120" /><O C="11" Y="315" P="0" X="4720" /><O C="11" Y="145" X="3965" P="0" /><O C="11" Y="120" P="0" X="4365" /></O></Z></C>'},
  {n = "Castle Crashers (Tomstoms)", Width = 4800, Height = 400,
    XML = '<C><P F="8" L="4800" Ca="" /><Z><S><S H="100" L="99" X="342" c="4" Y="317" T="10" P="0,0,0.3,,0,0,0,0" /><S P="0,0,0.3,,10,0,0,0" L="99" X="712" c="4" Y="340" T="10" H="76" /><S P="0,0,0,0,-10,0,0,0" L="18" o="141414" X="923" Y="337" T="13" H="10" /><S P="0,0,0,0,-10,0,0,0" L="120" o="141414" X="979" Y="327" T="12" H="36" /><S L="120" X="974" H="40" Y="362" T="0" P="0,0,0.3,0.2,17,0,0,0" /><S L="10" o="90909" X="1091" H="10" Y="354" T="13" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0,0,-10,0,0,0" L="10" o="90909" H="10" Y="355" T="13" X="1107" /><S L="80" H="30" X="608" Y="363" T="10" P="0,0,0,0,20,0,0,0" /><S P="0,0,0.3,,-5,0,0,0" L="70" H="150" c="4" Y="300" T="10" X="507" /><S L="10" o="90909" H="10" X="1100" Y="340" T="13" P="0,0,0,0,-10,0,0,0" /><S L="160" X="718" H="30" Y="298" T="10" P="0,0,0,0,10,0,0,0" /><S L="120" H="30" X="469" Y="341" T="10" P="0,0,0,0,-40,0,0,0" /><S L="160" X="507" H="30" Y="229" T="10" P="0,0,0,,20,0,0,0" /><S L="160" H="30" X="341" Y="267" T="10" P="0,0,0,0,10,0,0,0" /><S L="160" X="180" H="30" Y="320" T="10" P="0,0,0,0,60,0,0,0" /><S L="160" H="30" X="100" Y="305" T="10" P="0,0,0,0,-70,0,0,0" /><S L="40" H="30" X="828" Y="366" T="10" P="0,0,0,0,135,0,0,0" /><S X="1370" L="160" H="180" c="4" Y="300" T="10" P="0,0,0.3,0,180,0,0,0" /><S L="700" H="20" X="1809" Y="390" T="9" P="0,0,,,,0,0,0" /><S L="50" X="2344" H="30" Y="367" T="0" P="0,0,0,0,60,0,0,0" /><S L="80" H="50" X="2300" Y="355" T="0" P="0,0,0,0,10,0,0,0" /><S L="60" X="2150" H="10" Y="360" T="0" P="0,0,0,0,90,0,0,0" /><S L="60" H="30" X="1350" Y="370" T="0" P="0,0,0,0,45,0,0,0" /><S L="80" H="10" X="2180" Y="350" T="0" P="0,0,0,0,40,0,0,0" /><S L="150" H="10" X="1840" Y="324" T="0" P="0,0,0,0,-25,0,0,0" /><S L="100" X="1985" H="10" Y="338" T="0" P="0,0,0,0,160,0,0,0" /><S L="60" X="1920" H="35" Y="331" T="0" P="0,0,0.3,0.2,90,0,0,0" /><S L="10" X="1470" H="10" Y="200" T="10" P="0,0,0,0,45,0,0,0" /><S L="80" H="10" X="1420" Y="290" T="0" P="0,0,0,0,140,0,0,0" /><S L="80" X="1320" H="10" Y="245" T="0" P="0,0,0,0,40,0,0,0" /><S L="10" H="10" X="1270" Y="200" T="10" P="0,0,0,0,45,0,0,0" /><S L="50" X="1650" H="10" Y="325" T="0" P="0,0,0,0,70,0,0,0" /><S L="20" H="10" X="2020" Y="330" T="0" P="0,0,0,0.2,70,0,0,0" /><S L="80" H="20" X="1400" Y="210" T="10" P="0,0,0,0,0,0,0,0" /><S L="120" X="1455" H="30" Y="260" T="10" P="0,0,0.3,0.2,90,0,0,0" /><S L="120" H="30" X="1283" Y="260" T="10" P="0,0,0.3,0.2,270,0,0,0" /><S L="93" H="10" X="1640" Y="355" T="0" P="0,0,0,0,,0,0,0" /><S L="93" X="1655" H="10" Y="345" T="0" P="0,0,0,0,,0,0,0" /><S L="93" H="10" X="1645" Y="335" T="0" P="0,0,0,0,,0,0,0" /><S L="59" H="10" X="2010" Y="355" T="0" P="0,0,0,0,,0,0,0" /><S L="59" X="2020" H="10" Y="345" T="0" P="0,0,0,0.2,,0,0,0" /><S H="160" L="56" X="2832" c="2" Y="294" T="10" P="0,0,0.3,0,185,0,0,0" /><S P="0,0,0.3,0,-185,0,0,0" L="56" X="3174" c="2" Y="291" T="10" H="160" /><S P="0,0,0.3,,5,0,0,0" L="56" H="100" c="2" Y="323" T="10" X="2688" /><S L="50" H="30" X="2855" Y="362" T="10" P="0,0,0,0,-30,0,0,0" /><S H="100" L="56" X="3317" c="2" Y="324" T="10" P="0,0,0.3,,-5,0,0,0" /><S L="50" X="3145" H="30" Y="362" T="10" P="0,0,0,0,30,0,0,0" /><S L="10" X="2914" H="42" Y="352" T="10" P="0,0,0,0,190,0,0,0" /><S L="10" H="42" X="3099" Y="363" T="10" P="0,0,0,0,170,0,0,0" /><S L="10" H="42" X="2948" Y="370" T="10" P="0,0,0,0,170,0,0,0" /><S L="10" H="42" X="3008" Y="346" T="10" P="0,0,0,0,160,0,0,0" /><S L="10" X="3047" H="42" Y="352" T="10" P="0,0,0,0,190,0,0,0" /><S L="120" X="2581" H="30" Y="350" T="10" P="0,0,0,0,30,0,0,0" /><S L="120" H="30" X="3408" Y="354" T="10" P="0,0,0,0,-40,0,0,0" /><S L="80" X="2798" H="30" Y="347" T="10" P="0,0,0,0,60,0,0,0" /><S L="10" X="2988" H="42" Y="370" T="10" P="0,0,0,0,170,0,0,0" /><S L="50" X="2949" H="10" Y="241" T="0" P="0,0,0,0,20,0,0,0" /><S L="50" H="10" X="3000" Y="250" T="0" P="0,0,0,0,,0,0,0" /><S L="50" H="10" X="3051" Y="241" T="0" P="0,0,0,0,-20,0,0,0" /><S L="50" H="10" X="2904" Y="216" T="0" P="0,0,0,0,40,0,0,0" /><S L="50" X="3098" H="10" Y="219" T="0" P="0,0,0,0,-30,0,0,0" /><S L="120" X="2838" H="30" Y="210" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S L="120" H="30" X="3167" Y="218" T="10" P="0,0,0.3,0.2,0,0,0,0" /><S L="80" X="3313" H="30" Y="275" T="10" P="0,0,0,0,20,0,0,0" /><S L="120" H="30" X="2688" Y="277" T="10" P="0,0,0,0,-20,0,0,0" /><S L="40" H="30" X="3205" Y="302" T="10" P="0,0,0,0,-30,0,0,0" /><S L="50" H="10" X="2485" Y="355" T="0" P="0,0,0,0,20,0,0,0" /><S L="50" X="3300" H="10" Y="345" T="0" P="0,0,0,0,60,0,0,0" /><S L="30" H="10" X="2825" Y="350" T="0" P="0,0,0,0,80,0,0,0" /><S H="63" L="10" X="4515" c="2" Y="220" T="0" P="0,0,0,0.2,10,0,0,0" /><S X="4530" L="120" H="120" c="4" Y="302" T="10" P="0,0,0.3,0,180,0,0,0" /><S L="25" H="50" X="4086" Y="326" T="0" P="0,0,0,0,380,0,0,0" /><S L="10" X="4043" H="50" Y="355" T="0" P="0,0,0,0,200,0,0,0" /><S L="10" X="3786" H="100" Y="351" T="0" P="0,0,0,0,110,0,0,0" /><S L="25" X="4084" H="100" Y="343" T="10" P="0,0,0,,100,0,0,0" /><S L="120" H="25" X="3729" Y="339" T="10" P="0,0,0,0,-30,0,0,0" /><S L="10" H="50" X="3896" Y="355" T="0" P="0,0,0,0,210,0,0,0" /><S L="10" X="3956" H="50" Y="350" T="0" P="0,0,0,0,170,0,0,0" /><S L="10" X="4247" H="63" Y="357" T="0" P="0,0,0,0,40,0,0,0" /><S L="10" X="4340" H="63" Y="340" T="0" P="0,0,0,0,20,0,0,0" /><S L="25" X="4423" H="50" Y="367" T="0" P="0,0,0,0,490,0,0,0" /><S L="25" H="50" X="4494" Y="368" T="0" P="0,0,0,0,410,0,0,0" /><S L="20" H="50" X="4280" Y="345" T="10" P="0,0,0,0,-20,0,0,0" /><S L="10" X="4565" H="50" Y="297" T="0" P="0,0,0,0,50,0,0,0" /><S L="80" X="4680" H="20" Y="350" T="10" P="0,0,0,0,40,0,0,0" /><S L="10" H="70" X="4495" Y="240" T="0" P="0,0,0,0,90,0,0,0" /><S L="80" H="20" X="4470" Y="275" T="10" P="0,0,0.3,,-90,0,0,0" /><S L="80" X="4590" H="20" Y="275" T="10" P="0,0,0.3,0.2,90,0,0,0" /><S L="10" H="63" X="4315" Y="316" T="0" P="0,0,0,0,80,0,0,0" /><S H="28" L="44" o="ffffff" X="4495" c="2" Y="199" T="12" P="0,0,0.3,0.2,10,0,0,0" /><S L="2720" X="3440" H="40" Y="380" T="6" P="0,0,0.3,0.2,0,0,0,0" /><S L="1520" H="40" X="760" Y="380" T="6" P="0,0,0.3,0.2,0,0,0,0" /><S c="3" L="2400" o="6a7495" H="10" X="1200" Y="-5" T="12" P="0,0,0.3,0.2,0,0,0,0" /><S P="0,0,0.3,0.2,0,0,0,0" L="2400" o="6a7495" X="3600" c="3" Y="-5" T="12" H="10" /><S P="0,0,0,0,0,0,0,0" L="10" o="6a7495" X="-5" c="3" Y="200" T="12" H="400" /><S H="400" L="10" o="6a7495" X="4805" c="3" Y="200" T="12" P="0,0,0,0,0,0,0,0" /></S><D><P P="0,0" Y="398" T="17" X="1550" /><P X="1650" Y="398" T="17" P="0,0" /><P P="0,0" Y="398" T="17" X="1750" /><P X="1850" Y="398" T="17" P="0,0" /><P P="0,0" Y="398" T="17" X="1950" /><P X="2050" Y="398" T="17" P="0,0" /><P C="714330,23130c" Y="360" T="103" P="1,0" X="1920" /></D><O><O C="11" Y="245" P="0" X="70" /><O C="11" Y="280" X="945" P="0" /><O C="11" Y="335" P="0" X="540" /><O C="11" Y="170" P="0" X="1375" /><O C="11" Y="255" X="1955" P="0" /><O C="11" Y="295" P="0" X="2300" /><O C="11" Y="325" P="0" X="2965" /><O C="11" Y="170" X="3180" P="0" /><O C="11" Y="235" P="0" X="2645" /><O C="11" Y="285" P="0" X="4660" /><O C="11" Y="300" X="4130" P="0" /><O C="11" Y="295" P="0" X="3650" /></O></Z></C>'},
  {n = "No man is an Island (Onkei)", Width = 4800, Height = 400,
    XML = '<C><P F="8" L="4800" Ca="" mgoc="-1"/><Z><S><S P="0,0,0.3,0.2,-10,0,0,0" L="20" o="44606e" X="285" c="4" Y="295" T="12" H="100" /><S H="20" L="400" o="324650" X="195" c="3" Y="335" T="12" P="0,0,0.2,0.3,10,0,0,0" /><S H="100" L="20" o="44606e" X="800" c="4" Y="325" T="12" P="0,0,0.3,0.2,-10,0,0,0" /><S H="30" L="60" X="985" c="3" Y="350" T="1" P="0,0,0,0.2,50,0,0,0" /><S H="20" L="120" o="324650" X="465" c="3" Y="250" T="12" P="0,0,0,0,10,0,0,0" /><S H="50" L="20" o="324650" X="100" c="3" Y="295" T="12" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0.2,170,0,0,0" L="70" H="12" c="3" Y="374" T="1" X="580" /><S H="20" L="60" X="1100" c="3" Y="365" T="1" P="0,0,0,0.2,150,0,0,0" /><S P="0,0,0,0.2,45,0,0,0" L="50" H="50" c="3" Y="360" T="1" X="355" /><S H="12" L="40" o="324650" X="490" c="3" Y="360" T="12" P="0,0,0,0,10,0,0,0" /><S P="0,0,0,0,30,0,0,0" L="20" o="324650" X="435" c="3" Y="355" T="12" H="30" /><S P="0,0,0,0,20,0,0,0" L="100" o="324650" X="640" c="3" Y="265" T="12" H="20" /><S P="0,0,0,0,0,0,0,0" L="300" X="1050" c="3" Y="380" T="0" H="40" /><S H="40" L="300" X="400" c="3" Y="380" T="0" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="200" o="324650" X="730" c="3" Y="380" T="12" H="20" /><S H="50" L="20" o="324650" X="840" c="3" Y="365" T="12" P="0,0,0,0,45,0,0,0" /><S P="0,0,0,0,-5,0,0,0" L="20" o="324650" X="620" c="3" Y="365" T="12" H="50" /><S P="0,0,0,0.2,120,0,0,0" L="60" X="870" c="3" Y="380" T="1" H="12" /><S P="0,0,0,0,-10,0,0,0" L="120" X="225" c="3" Y="245" T="0" H="30" /><S H="30" L="120" X="350" c="3" Y="250" T="0" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0,0,-10,0,0,0" L="120" H="30" c="3" Y="275" T="0" X="860" /><S X="740" L="120" H="30" c="3" Y="270" T="0" P="0,0,0,0,-10,0,0,0" /><S X="305" L="60" H="20" c="3" Y="235" T="1" P="0,0,0,0.2,20,0,0,0" /><S P="0,0,0,0.2,45,0,0,0" L="30" X="800" c="3" Y="265" T="1" H="20" /><S H="20" L="100" X="2170" c="3" Y="375" T="0" P="0,0,0,0,150,0,0,0" /><S H="20" L="80" X="1995" c="3" Y="250" T="0" P="0,0,0,0,160,0,0,0" /><S L="2400" X="1200" H="20" Y="390" T="9" P="0,0,,,,0,0,0" /><S H="10" L="1200" o="6a7495" X="1800" c="3" N="" Y="405" T="12" P="0,0,0.3,0.2,0,0,0,0" /><S P="0,0,0,0,-20,0,0,0" L="120" X="1975" c="3" Y="230" T="6" H="30" /><S H="30" L="80" X="2045" c="3" Y="225" T="6" P="0,0,0,0,30,0,0,0" /><S P="0,0,0,0,45,0,0,0" L="40" X="2025" c="3" Y="235" T="0" H="40" /><S L="20" X="1925" H="146" Y="308" T="9" P="0,0,,,,0,0,0" /><S L="20" H="146" X="2080" Y="308" T="9" P="0,0,,,,0,0,0" /><S H="30" L="120" X="1370" c="3" Y="375" T="6" P="0,0,0,0,-20,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="80" H="30" c="3" Y="355" T="6" X="1455" /><S X="1495" L="40" H="30" c="3" Y="350" T="6" P="0,0,0,0,45,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="120" H="30" c="3" Y="385" T="6" X="1575" /><S P="0,0,0,0,0,0,0,0" L="220" X="1450" c="3" Y="380" T="0" H="40" /><S H="30" L="120" X="1580" c="3" Y="150" T="6" P="0,0,0,0,-20,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="80" H="30" c="3" Y="160" T="6" X="1500" /><S P="0,0,0,0,-10,0,0,0" L="80" X="1500" c="3" Y="180" T="0" H="20" /><S H="60" L="40" X="1540" c="3" Y="185" T="0" P="0,0,0,0,45,0,0,0" /><S P="0,0,0,0,160,0,0,0" L="80" H="20" c="3" Y="170" T="0" X="1585" /><S P="0,0,0,0,30,0,0,0" L="80" H="30" c="3" Y="160" T="6" X="1645" /><S L="20" H="240" X="1455" Y="260" T="9" P="0,0,,,,0,0,0" /><S L="20" X="1680" H="216" Y="272" T="9" P="0,0,,,,0,0,0" /><S P="0,0,0,0,45,0,0,0" L="80" X="2235" c="3" Y="365" T="0" H="40" /><S P="0,0,0,0,45,0,0,0" L="20" H="20" c="3" Y="395" T="0" X="2110" /><S X="2280" L="240" H="40" c="3" N="" Y="380" T="6" P="0,0,0,0,0,0,0,0" /><S X="3510" L="12" H="40" c="3" Y="365" T="0" P="0,0,0,0,-200,0,0,0" /><S X="3485" L="30" H="40" c="3" Y="365" T="0" P="0,0,0,0,225,0,0,0" /><S H="20" L="60" o="44606e" X="2585" c="4" Y="355" T="12" P="0,0,0.3,0.2,-20,0,0,0" /><S P="0,0,0,0,120,0,0,0" L="30" X="2915" c="3" Y="340" T="0" H="140" /><S X="3310" L="25" H="40" c="3" Y="300" T="0" P="0,0,0,0,0,0,0,0" /><S H="40" L="20" X="3070" c="3" Y="365" T="0" P="0,0,0,0,70,0,0,0" /><S H="40" L="20" o="44606e" X="3310" c="4" Y="340" T="12" P="0,0,0.3,0.2,0,0,0,0" /><S P="0,0,0.3,0.2,0,0,0,0" L="20" o="44606e" X="3210" c="4" Y="340" T="12" H="40" /><S H="275" L="25" X="2755" c="3" Y="320" T="0" P="0,0,0,0,80,0,0,0" /><S P="0,0,0.3,0.2,0,0,0,0" L="20" o="44606e" X="3410" c="4" Y="340" T="12" H="40" /><S P="0,0,0,0,0,0,0,0" L="25" X="3410" c="3" Y="300" T="0" H="40" /><S P="0,0,0,0,20,0,0,0" L="120" X="2630" c="3" Y="350" T="0" H="30" /><S H="25" L="30" X="2595" c="3" Y="325" T="0" P="0,0,0,0.2,180,0,0,0" /><S P="0,0,0,0,20,0,0,0" L="12" H="40" c="3" Y="350" T="0" X="3090" /><S X="2490" L="25" H="40" c="3" Y="300" T="0" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0.2,200,0,0,0" L="30" H="25" c="4" Y="365" T="0" X="2665" /><S P="0,0,0,0,0,0,0,0" L="25" H="40" c="3" Y="300" T="0" X="3210" /><S P="0,0,0.2,0.3,90,0,0,0" L="25" H="40" c="3" Y="310" T="0" X="3210" /><S X="3310" L="25" H="40" c="3" Y="310" T="0" P="0,0,0.2,0.3,90,0,0,0" /><S P="0,0,0.2,0.3,90,0,0,0" L="25" X="3410" c="3" Y="310" T="0" H="40" /><S H="40" L="20" o="44606e" X="2490" c="4" Y="340" T="12" P="0,0,0.3,0.2,0,0,0,0" /><S X="2490" L="25" H="40" c="3" Y="310" T="0" P="0,0,0.2,0.3,90,0,0,0" /><S P="0,0,0,0,180,0,0,0" L="400" H="12" c="3" Y="355" T="10" X="3890" /><S H="30" L="30" X="3880" c="3" Y="350" T="0" P="0,0,0,0,225,0,0,0" /><S P="0,0,0,0,120,0,0,0" L="40" X="3985" c="3" Y="340" T="10" H="12" /><S P="0,0,0,0,20,0,0,0" L="120" X="3740" c="3" Y="365" T="0" H="30" /><S P="0,0,0,0,225,0,0,0" L="40" X="4345" c="3" Y="350" T="10" H="30" /><S H="30" L="120" X="4040" c="3" Y="365" T="0" P="0,0,0,0,20,0,0,0" /><S H="12" L="40" X="3840" c="3" Y="330" T="10" P="0,0,0,0,20,0,0,0" /><S L="2400" H="40" X="3600" N="" Y="380" T="6" P="0,0,0.3,0.2,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="10" o="6a7495" X="4805" c="3" Y="200" T="12" H="400" /><S P="0,0,0,0,0,0,0,0" L="60" X="3850" c="3" Y="345" T="0" H="30" /><S H="30" L="40" X="3975" c="3" Y="340" T="0" P="0,0,0,0,90,0,0,0" /><S P="0,0,0,0,225,0,0,0" L="40" H="30" c="3" Y="335" T="10" X="4685" /><S X="4280" L="120" H="30" c="3" Y="345" T="10" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="120" X="4460" c="3" Y="285" T="10" H="30" /><S H="30" L="40" X="4400" c="3" Y="295" T="10" P="0,0,0,0,225,0,0,0" /><S H="30" L="120" X="4220" c="3" Y="240" T="10" P="0,0,0,0,0,0,0,0" /><S H="30" L="40" X="4280" c="3" Y="250" T="10" P="0,0,0,0,225,0,0,0" /><S P="0,0,0,0,20,0,0,0" L="120" X="4535" c="3" Y="290" T="10" H="30" /><S H="30" L="120" X="4700" c="3" Y="345" T="10" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="120" H="30" c="3" Y="230" T="10" X="4650" /><S P="0,0,0,0,225,0,0,0" L="40" H="30" c="3" Y="240" T="10" X="4595" /><S P="0,0,0,0,0,0,0,0" L="120" H="30" c="3" Y="180" T="10" X="4440" /><S X="4385" L="40" H="30" c="3" Y="190" T="10" P="0,0,0,0,225,0,0,0" /><S P="0,0,0,0,225,0,0,0" L="40" X="4500" c="3" Y="190" T="10" H="30" /><S P="0,0,0,0,225,0,0,0" L="40" X="4165" c="3" Y="250" T="10" H="30" /><S P="0,0,0,0,120,0,0,0" L="40" H="30" c="3" Y="225" T="0" X="4040" /><S H="30" L="60" X="3925" c="3" Y="215" T="0" P="0,0,0,0,-30,0,0,0" /><S H="30" L="40" X="3815" c="3" Y="240" T="0" P="0,0,0,0,120,0,0,0" /><S P="0,0,0,0,225,0,0,0" L="30" H="30" c="3" Y="285" T="0" X="3740" /><S H="400" L="10" o="6a7495" X="-5" c="3" Y="200" T="12" P="0,0,0,0,0,0,0,0" /><S H="10" L="2400" o="6a7495" X="3600" c="3" Y="-5" T="12" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="2400" o="6a7495" X="1200" c="3" Y="-5" T="12" H="10" /></S><D /><O><O C="11" Y="200" X="210" P="0" /><O C="11" Y="340" P="0" X="730" /><O C="11" Y="210" X="755" P="0" /><O C="11" Y="95" X="1415" P="0" /><O C="11" Y="175" P="0" X="1980" /><O C="11" Y="355" X="1740" P="0" /><O C="80" Y="265" X="3115" P="0,1" /><O C="80" Y="235" P="20,1" X="3030" /><O C="80" Y="205" X="2965" P="30,1" /><O C="80" Y="180" P="0,1" X="2890" /><O C="80" Y="190" X="2800" P="-20,1" /><O C="80" Y="215" P="-30,1" X="2690" /><O C="80" Y="250" X="2600" P="-30,1" /><O C="80" Y="235" P="-40,0" X="3370" /><O C="80" Y="140" X="3455" P="-80,0" /><O C="11" Y="145" P="0" X="2795" /><O C="11" Y="300" X="3480" P="0" /><O C="11" Y="250" P="0" X="2480" /><O C="11" Y="175" X="3890" P="0" /><O C="11" Y="300" P="0" X="4730" /><O C="11" Y="300" X="4265" P="0" /></O></Z></C>'},
  {n = "Sticks and Stones (Tomstoms)", Width = 4800, Height = 400,
    XML = '<C><P F="8" L="4800" Ca="" /><Z><S><S P="0,0,0,0,90,0,0,0" L="180" H="10" c="4" Y="308" T="0" X="436" /><S P="0,0,0,0,270,0,0,0" L="160" X="199" c="4" Y="293" T="0" H="10" /><S c="3" L="100" H="10" X="436" Y="343" T="0" P="0,0,0,0,230,0,0,0" /><S c="3" L="100" X="378" H="10" Y="333" T="0" P="0,0,0,0,130,0,0,0" /><S H="250" L="60" X="119" c="4" Y="255" T="10" P="0,0,0,0,10,0,0,0" /><S H="10" L="50" X="771" c="3" Y="361" T="0" P="0,0,0,0,270,0,0,0" /><S c="3" L="100" X="658" H="10" Y="350" T="0" P="0,0,0,0,20,0,0,0" /><S X="509" L="60" H="100" c="4" Y="323" T="10" P="0,0,0,0,10,0,0,0" /><S H="10" L="90" X="882" c="3" Y="354" T="0" P="0,0,0,0,300,0,0,0" /><S P="0,0,0,0,270,0,0,0" L="120" X="41" c="4" Y="305" T="0" H="10" /><S P="0,0,0,0,280,0,0,0" L="50" H="10" c="4" Y="214" T="0" X="128" /><S P="0,0,0,0,10,0,0,0" L="60" H="200" c="4" Y="300" T="10" X="302" /><S X="981" L="50" H="10" c="3" Y="346" T="0" P="0,0,0,0,250,0,0,0" /><S P="0,0,0,0,260,0,0,0" L="100" H="10" c="4" Y="322" T="0" X="328" /><S P="0,0,0,0,270,0,0,0" L="50" H="10" c="3" Y="361" T="0" X="1034" /><S H="10" L="100" X="276" c="4" Y="334" T="0" P="0,0,0,0,270,0,0,0" /><S P="0,0,0,0,270,0,0,0" L="80" X="962" c="3" Y="360" T="0" H="10" /><S c="3" L="100" H="10" X="590" Y="353" T="0" P="0,0,0,0,130,0,0,0" /><S c="3" L="100" X="672" H="10" Y="369" T="0" P="0,0,0,0,150,0,0,0" /><S c="3" L="100" X="859" H="10" Y="363" T="0" P="0,0,0,0,220,0,0,0" /><S P="0,0,0,0,270,0,0,0" L="80" H="10" c="4" Y="340" T="0" X="140" /><S X="209" L="120" H="10" c="4" Y="159" T="0" P="0,0,0,0,290,0,0,0" /><S c="3" L="100" X="989" H="10" Y="361" T="0" P="0,0,0,0,160,0,0,0" /><S c="3" L="100" H="10" X="943" Y="356" T="0" P="0,0,0,0,200,0,0,0" /><S X="124" L="55" H="10" c="4" Y="270" T="0" P="0,0,0,0,260,0,0,0" /><S X="291" L="50" H="10" c="4" Y="165" T="0" P="0,0,0,0,270,0,0,0" /><S c="3" L="100" X="403" H="10" Y="209" T="0" P="0,0,0,0,20,0,0,0" /><S c="3" L="100" H="20" X="516" Y="279" T="10" P="0,0,0,0,10,0,0,0" /><S c="3" L="100" X="319" H="20" Y="202" T="10" P="0,0,0,0,10,0,0,0" /><S c="3" L="100" H="20" X="142" Y="136" T="10" P="0,0,0,0,10,0,0,0" /><S c="3" L="100" H="10" X="172" Y="203" T="0" P="0,0,0.1,0.2,200,0,0,0" /><S c="3" L="100" X="308" H="10" Y="274" T="0" P="0,0,0,0,160,0,0,0" /><S c="3" L="100" H="10" X="165" Y="306" T="0" P="0,0,0,0,200,0,0,0" /><S c="3" L="100" X="82" H="10" Y="243" T="0" P="0,0,0.1,0.2,180,0,0,0" /><S c="3" L="100" X="263" H="10" Y="122" T="0" P="0,0,0.1,0.2,210,0,0,0" /><S X="2138" L="100" H="10" c="4" Y="276" T="0" P="0,0,0,0,-80,0,0,0" /><S c="3" L="240" H="80" X="2090" Y="335" T="6" P="0,0,0,0,-10,0,0,0" /><S X="1989" L="100" H="10" c="4" Y="228" T="0" P="0,0,0,0,90,0,0,0" /><S X="1965" L="160" H="120" c="3" Y="300" T="6" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0,0,90,0,0,0" L="100" X="1606" c="4" Y="228" T="0" H="10" /><S P="0,0,0,0,-100,0,0,0" L="100" H="10" c="4" Y="284" T="0" X="1547" /><S P="0,0,0,0,-30,0,0,0" L="140" H="80" c="3" Y="330" T="6" X="1560" /><S c="3" L="80" H="40" X="1420" Y="350" T="6" P="0,0,0,0,-45,0,0,0" /><S H="10" L="50" X="1667" c="4" Y="132" T="0" P="0,0,0,0,110,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="120" H="100" c="3" Y="312" T="6" X="1650" /><S X="2215" L="100" H="10" c="4" Y="273" T="0" P="0,0,0,0,100,0,0,0" /><S X="1807" L="100" H="10" c="4" Y="201" T="0" P="0,0,0,0,80,0,0,0" /><S P="0,0,0,0,90,0,0,0" L="100" H="10" c="4" Y="208" T="0" X="1748" /><S c="3" L="201" X="1800" H="200" Y="300" T="6" P="0,0,0,0,0,0,0,0" /><S H="10" L="100" X="1489" c="4" Y="304" T="0" P="0,0,0,0,-90,0,0,0" /><S X="1668" L="100" H="10" c="4" Y="203" T="0" P="0,0,0,0,80,0,0,0" /><S c="3" L="120" X="1490" H="80" Y="350" T="6" P="0,0,0.3,0.2,5,0,0,0" /><S P="0,0,0,0,80,0,0,0" L="100" X="1921" c="4" Y="207" T="0" H="10" /><S P="0,0,0,0,80,0,0,0" L="60" X="1740" c="4" Y="133" T="0" H="10" /><S c="3" L="100" X="2210" H="80" Y="335" T="6" P="0,0,0,0,50,0,0,0" /><S c="3" L="100" H="10" X="2185" Y="226" T="0" P="0,0,0,0,,0,0,0" /><S P="0,0,0,0,-20,0,0,0" L="100" X="1516" c="3" Y="246" T="0" H="10" /><S H="10" L="100" X="1778" c="3" Y="156" T="0" P="0,0,0,0,-5,0,0,0" /><S X="2060" L="140" H="80" c="3" Y="305" T="6" P="0,0,0,0,40,0,0,0" /><S P="0,0,0,0,15,0,0,0" L="100" H="10" c="3" Y="171" T="0" X="1951" /><S X="1708" L="100" H="10" c="3" Y="107" T="0" P="0,0,0.2,0.3,,0,0,0" /><S P="0,0,0,0,-20,0,0,0" L="100" X="1628" c="3" Y="168" T="0" H="10" /><S X="1685" L="140" H="80" c="3" Y="280" T="6" P="0,0,0,0,-50,0,0,0" /><S P="0,0,0,0,40,0,0,0" L="140" X="1930" c="3" Y="277" T="6" H="80" /><S P="0,0,0,0,100,0,0,0" L="230" X="2828" c="4" Y="265" T="0" H="10" /><S P="0,0,0,0,90,0,0,0" L="60" X="3113" c="4" Y="345" T="0" H="10" /><S c="3" L="100" H="10" X="2811" Y="381" T="0" P="0,0,0,0,60,0,0,0" /><S H="10" L="65" X="3048" c="4" Y="352" T="0" P="0,0,0,0,100,0,0,0" /><S P="0,0,0,0,100,0,0,0" L="60" H="10" c="4" Y="369" T="0" X="2912" /><S H="10" L="90" X="3225" c="4" Y="303" T="0" P="0,0,0,0,110,0,0,0" /><S X="2676" L="165" H="10" c="4" Y="339" T="0" P="0,0,0,0.2,100,0,0,0" /><S X="3448" L="150" H="10" c="4" Y="310" T="0" P="0,0,0,0,80,0,0,0" /><S H="10" L="170" X="2749" c="4" Y="297" T="0" P="0,0,0,0,100,0,0,0" /><S P="0,0,0,0,90,0,0,0" L="90" X="3333" c="4" Y="351" T="0" H="10" /><S H="10" L="90" X="3399" c="4" Y="353" T="0" P="0,0,0,0,80,0,0,0" /><S P="0,0,0,0.2,80,0,0,0" L="45" X="3041" c="4" Y="295" T="0" H="10" /><S P="0,0,0,0,90,0,0,0" L="100" H="10" c="4" Y="310" T="0" X="3274" /><S P="0,0,0,0,120,0,0,0" L="100" X="2891" c="4" Y="255" T="0" H="10" /><S P="0,0,0,0,70,0,0,0" L="165" H="10" c="4" Y="303" T="0" X="3148" /><S P="0,0,0,0,80,0,0,0" L="170" X="2981" c="4" Y="307" T="0" H="10" /><S X="3081" L="100" H="10" c="4" Y="269" T="0" P="0,0,0,0,100,0,0,0" /><S c="3" L="100" H="10" X="3195" Y="375" T="0" P="0,0,0,0,-10,0,0,0" /><S L="320" X="3440" H="40" Y="380" T="6" P="0,0,0.1,0.2,,0,0,0" /><S c="3" L="240" X="2800" H="40" Y="330" T="6" P="0,0,0,0,-30,0,0,0" /><S c="3" L="100" X="3090" H="10" Y="319" T="0" P="0,0,0,0,,0,0,0" /><S c="3" L="100" H="10" X="2953" Y="343" T="0" P="0,0,0,0,5,0,0,0" /><S P="0,0,0,0,30,0,0,0" L="240" H="40" c="3" Y="335" T="6" X="3200" /><S L="320" H="40" X="2560" Y="380" T="6" P="0,0,0.1,0.2,,0,0,0" /><S P="0,0,0,0,110,0,0,0" L="80" H="10" c="4" Y="274" T="0" X="3376" /><S X="2919" L="65" H="10" c="4" Y="185" T="0" P="0,0,0,0,80,0,0,0" /><S c="3" L="200" H="10" X="3038" Y="385" T="0" P="0,0,0,0,-10,0,0,0" /><S c="3" L="100" X="2892" H="10" Y="393" T="0" P="0,0,0,0,10,0,0,0" /><S c="3" L="100" H="10" X="3006" Y="275" T="0" P="0,0,0,0,-10,0,0,0" /><S c="3" L="100" X="3111" H="10" Y="222" T="0" P="0,0,0,0,10,0,0,0" /><S c="3" L="100" H="10" X="2947" Y="218" T="0" P="0,0,0,0,10,0,0,0" /><S c="3" L="100" X="2802" H="10" Y="207" T="0" P="0,0,0,0,-10,0,0,0" /><S c="3" L="100" H="10" X="3263" Y="261" T="0" P="0,0,0.1,0.2,,0,0,0" /><S c="3" L="100" X="3363" H="10" Y="308" T="0" P="0,0,0.1,0.2,,0,0,0" /><S c="3" L="100" X="3412" H="10" Y="236" T="0" P="0,0,0,0,0,0,0,0" /><S c="3" L="100" X="2884" H="10" Y="156" T="0" P="0,0,0.1,0.2,,0,0,0" /><S c="3" L="100" H="10" X="2725" Y="266" T="0" P="0,0,0,0,10,0,0,0" /><S P="0,0,0,0,70,0,0,0" L="55" X="4618" c="4" Y="148" T="0" H="10" /><S H="10" L="50" X="4117" c="4" Y="285" T="0" P="0,0,0,0,80,0,0,0" /><S X="4718" L="200" H="10" c="4" Y="281" T="0" P="0,0,0,0,80,0,0,0" /><S H="10" L="150" X="4596" c="4" Y="235" T="0" P="0,0,0,0,120,0,0,0" /><S X="3968" L="150" H="10" c="4" Y="311" T="0" P="0,0,0,0,90,0,0,0" /><S P="0,0,0,0,100,0,0,0" L="150" X="4668" c="4" Y="319" T="0" H="10" /><S P="0,0,0,0,-90,0,0,0" L="50" H="10" c="3" Y="364" T="0" X="3703" /><S P="0,0,0,0,100,0,0,0" L="150" H="10" c="4" Y="212" T="0" X="4523" /><S P="0,0,0,0,80,0,0,0" L="150" X="4040" c="2" Y="306" T="0" H="10" /><S P="0,0,0,0,60,0,0,0" L="160" H="120" c="3" Y="335" T="6" X="4530" /><S P="0,0,0,0,60,0,0,0" L="70" H="10" c="4" Y="326" T="0" X="3851" /><S X="4459" L="150" H="10" c="4" Y="263" T="0" P="0,0,0,0,90,0,0,0" /><S L="100" X="4148" H="10" Y="262" T="0" P="0,0,0,0,,0,0,0" /><S P="0,0,0,0,-70,0,0,0" L="100" H="10" c="3" Y="264" T="0" X="4311" /><S P="0,0,0,0,-110,0,0,0" L="100" X="4346" c="3" Y="259" T="0" H="10" /><S H="10" L="70" X="3768" c="4" Y="343" T="0" P="0,0,0,0,90,0,0,0" /><S P="0,0,0,0,-100,0,0,0" L="50" X="3926" c="3" Y="325" T="0" H="10" /><S P="0,0,0,0,-20,0,0,0" L="300" X="4125" c="3" Y="345" T="6" H="120" /><S P="0,0,0,0,-1,0,0,0" L="300" X="4395" c="3" Y="305" T="6" H="140" /><S P="0,0,0,0,-10,0,0,0" L="300" H="50" c="3" Y="360" T="6" X="3910" /><S P="0,0,0,0,10,0,0,0" L="100" H="10" c="3" Y="313" T="0" X="4704" /><S P="0,0,0,0,-10,0,0,0" L="100" X="4702" c="3" Y="241" T="0" H="10" /><S L="1520" H="40" X="4040" Y="380" T="6" P="0,0,0,0.2,,0,0,0" /><S P="0,0,0.1,0.2,10,0,0,0" L="100" H="10" c="3" Y="179" T="0" X="4662" /><S P="0,0,0.1,0.2,,0,0,0" L="100" X="4496" c="3" Y="188" T="0" H="10" /><S P="0,0,0.1,0.2,-10,0,0,0" L="100" H="10" c="3" Y="131" T="0" X="4572" /><S P="0,0,0.1,0.2,,0,0,0" L="100" H="10" c="3" Y="235" T="0" X="4003" /><S P="0,0,0,0,-10,0,0,0" L="100" X="3803" c="3" Y="303" T="0" H="10" /><S L="2400" X="1200" H="40" Y="380" T="6" P="0,0,0,0.2,,0,0,0" /><S c="3" L="2400" o="6a7495" H="10" X="1200" Y="-5" T="12" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="2400" o="6a7495" X="3600" c="3" Y="-5" T="12" H="10" /><S P="0,0,0,0,0,0,0,0" L="10" o="6a7495" X="-5" c="3" Y="200" T="12" H="400" /><S H="400" L="10" o="6a7495" X="4805" c="3" Y="200" T="12" P="0,0,0,0,0,0,0,0" /></S><D><P P="0,1" Y="385" T="44" X="2535" /><P P="0,0" Y="390" T="17" X="2530" /><P X="2530" Y="385" T="17" P="0,0" /><P P="0,0" Y="380" T="17" X="2530" /><P X="2530" Y="375" T="17" P="0,0" /></D><O><O C="11" Y="175" P="0" X="420" /><O C="11" Y="310" X="935" P="0" /><O C="11" Y="220" P="0" X="70" /><O C="11" Y="215" P="0" X="1505" /><O C="11" Y="175" X="2230" P="0" /><O C="11" Y="175" P="0" X="1845" /><O C="11" Y="345" P="0" X="3135" /><O C="11" Y="205" X="3410" P="0" /><O C="11" Y="220" P="0" X="2685" /><O C="11" Y="290" X="4700" P="0" /><O C="11" Y="165" P="0" X="4290" /><O C="11" Y="270" X="3800" P="0" /></O></Z></C>'},
  {n = "Sunshine Babylon (Onkei)", Width = 4800, Height = 400,
    XML = '<C><P F="1" L="4800" Ca="" /><Z><S><S P="0,0,0.3,0,180,0,0,0" L="40" H="200" c="4" Y="265" T="10" X="630" /><S X="540" L="120" H="20" c="3" Y="325" T="0" P="0,0,0,0,-45,0,0,0" /><S H="140" L="40" X="400" c="4" Y="296" T="10" P="0,0,0.3,0,180,0,0,0" /><S H="20" L="120" X="40" c="3" Y="325" T="0" P="0,0,0,0,45,0,0,0" /><S X="1020" L="80" H="240" c="4" Y="220" T="10" P="0,0,0.3,0,0,0,0,0" /><S X="810" L="40" H="80" c="4" Y="340" T="10" P="0,0,0.3,0,180,0,0,0" /><S X="300" L="40" H="20" c="3" Y="365" T="0" P="0,0,0,0,45,0,0,0" /><S P="0,0,0.3,0,180,0,0,0" L="40" H="180" c="4" Y="280" T="10" X="195" /><S H="20" L="120" X="395" c="3" Y="225" T="0" P="0,0,0,0,0,0,0,0" /><S H="20" L="40" X="545" c="3" Y="175" T="0" P="0,0,0,0,-45,0,0,0" /><S P="0,0,0,0,-45,0,0,0" L="120" H="20" c="3" Y="225" T="0" X="140" /><S X="235" L="120" H="20" c="3" Y="185" T="0" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="120" X="355" c="3" Y="205" T="0" H="20" /><S P="0,0,0,0,45,0,0,0" L="120" H="30" c="3" Y="200" T="0" X="300" /><S P="0,0,0,0,90,0,0,0" L="120" H="20" c="3" Y="255" T="0" X="420" /><S P="0,0,0,0,0,0,0,0" L="120" H="20" c="3" Y="285" T="0" X="630" /><S P="0,0,0.2,0.3,-45,0,0,0" L="60" X="795" c="3" Y="295" T="0" H="20" /><S P="0,0,0,0,0,0,0,0" L="80" H="20" c="3" Y="295" T="0" X="830" /><S P="0,0,0,0,45,0,0,0" L="120" H="20" c="3" Y="205" T="0" X="710" /><S P="0,0,0,0,0,0,0,0" L="120" X="615" c="3" Y="165" T="0" H="20" /><S H="20" L="40" X="1005" c="3" Y="335" T="0" P="0,0,0,0,-45,0,0,0" /><S P="0,0,0,0,-45,0,0,0" L="40" H="20" c="3" Y="280" T="0" X="1065" /><S X="995" L="40" H="20" c="3" Y="250" T="0" P="0,0,0,0,-45,0,0,0" /><S P="0,0,0,0,-45,0,0,0" L="40" X="1060" c="3" Y="190" T="0" H="20" /><S H="20" L="40" X="975" c="3" Y="175" T="0" P="0,0,0,0,-45,0,0,0" /><S P="0,0,0,0,-45,0,0,0" L="40" H="20" c="3" Y="110" T="0" X="1050" /><S X="1020" L="120" H="20" c="3" Y="350" T="0" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,45,0,0,0" L="40" H="20" c="3" Y="235" T="0" X="460" /><S P="0,0,0,0,-10,0,0,0" L="240" X="1325" c="3" Y="370" T="6" H="40" /><S P="0,0,0,0,20,0,0,0" L="160" H="40" c="3" Y="390" T="6" X="1560" /><S H="20" L="60" X="1420" c="4" Y="385" T="0" P="0,0,0.3,0.2,310,0,0,0" /><S P="0,0,0,0,60,0,0,0" L="30" X="1570" c="3" Y="295" T="0" H="280" /><S P="0,0,0,0,280,0,0,0" L="100" H="20" c="3" Y="315" T="0" X="1765" /><S H="40" L="40" X="1760" c="3" Y="305" T="6" P="0,0,0,0,-10,0,0,0" /><S H="40" L="80" X="1885" c="3" Y="380" T="6" P="0,0,0,0,-60,0,0,0" /><S P="0,0,0,0,270,0,0,0" L="60" X="2020" c="3" Y="335" T="0" H="20" /><S H="275" L="25" X="1570" c="4" Y="295" T="0" P="0,0,0.3,0.2,240,0,0,0" /><S P="0,0,0,0,220,0,0,0" L="120" X="1450" c="3" Y="355" T="0" H="30" /><S X="1910" L="80" H="25" c="3" Y="305" T="0" P="0,0,0.3,0.2,270,0,0,0" /><S H="25" L="30" X="1480" c="4" Y="380" T="0" P="0,0,0.3,0.2,220,0,0,0" /><S P="0,0,0.3,0.2,220,0,0,0" L="30" H="25" c="4" Y="330" T="0" X="1420" /><S P="0,0,0.3,0.2,90,0,0,0" L="70" X="1910" c="4" Y="305" T="0" H="20" /><S H="30" L="120" X="1730" c="3" Y="325" T="0" P="0,0,0,0,160,0,0,0" /><S X="1910" L="60" H="20" c="3" Y="365" T="0" P="0,0,0,0,270,0,0,0" /><S P="0,0,0,0,180,0,0,0" L="60" H="30" c="3" Y="330" T="0" X="1910" /><S X="1790" L="60" H="30" c="3" Y="310" T="0" P="0,0,0,0,190,0,0,0" /><S X="2305" L="60" H="30" c="3" Y="360" T="0" P="0,0,0,0,190,0,0,0" /><S P="0,0,0,0,260,0,0,0" L="80" X="2010" c="3" Y="285" T="0" H="25" /><S H="20" L="70" X="2010" c="4" Y="285" T="0" P="0,0,0.3,0.2,80,0,0,0" /><S X="2020" L="60" H="30" c="3" Y="320" T="0" P="0,0,0,0,180,0,0,0" /><S H="25" L="80" X="2270" c="3" Y="350" T="0" P="0,0,0,0,310,0,0,0" /><S L="20" H="40" X="1910" Y="330" T="9" P="0,0,,,,0,0,0" /><S L="20" X="1890" H="20" Y="340" T="9" P="0,0,,,,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="240" H="40" c="3" Y="380" T="6" X="2280" /><S P="0,0,0,0,-10,0,0,0" L="120" X="2150" c="3" Y="385" T="6" H="40" /><S P="0,0,0,0,250,0,0,0" L="60" X="2170" c="3" Y="355" T="0" H="25" /><S X="2990" L="120" H="30" c="3" Y="365" T="6" P="0,0,0,0,20,0,0,0" /><S H="30" L="120" X="2880" c="3" Y="345" T="6" P="0,0,0,0,0,0,0,0" /><S H="40" L="120" X="2800" c="3" Y="355" T="10" P="0,0,0,0,-70,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="80" H="40" c="3" Y="390" T="10" X="2580" /><S X="2540" L="80" H="40" c="3" Y="375" T="10" P="0,0,0,0,-60,0,0,0" /><S X="2500" L="80" H="30" c="3" Y="395" T="6" P="0,0,0,0,10,0,0,0" /><S P="0,0,0,0,-45,0,0,0" L="80" H="30" c="3" Y="285" T="6" X="3070" /><S X="3150" L="120" H="30" c="3" Y="250" T="6" P="0,0,0,0,-5,0,0,0" /><S P="0,0,0.2,0.3,35,0,0,0" L="80" X="3235" c="3" Y="265" T="6" H="30" /><S P="0,0,0,0,-40,0,0,0" L="120" X="3410" c="3" Y="220" T="6" H="30" /><S P="0,0,0,0,-5,0,0,0" L="120" X="3485" c="3" Y="180" T="6" H="30" /><S H="30" L="120" X="3290" c="3" Y="170" T="6" P="0,0,0,0,5,0,0,0" /><S H="15" L="40" X="3450" c="3" Y="355" T="6" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0,0,-5,0,0,0" L="160" X="3195" c="3" Y="165" T="6" H="30" /><S H="30" L="120" X="2991" c="3" Y="195" T="6" P="0,0,0,0,25,0,0,0" /><S H="30" L="120" X="2900" c="3" Y="175" T="6" P="0,0,0,0,-5,0,0,0" /><S P="0,0,0,0,-70,0,0,0" L="40" H="20" c="3" Y="350" T="10" X="3430" /><S X="3355" L="40" H="20" c="3" Y="360" T="10" P="0,0,0,0,10,0,0,0" /><S P="0,0,0,0,-60,0,0,0" L="40" X="3335" c="3" Y="350" T="10" H="20" /><S P="0,0,0,0,10,0,0,0" L="40" X="3315" c="3" Y="355" T="6" H="15" /><S P="0,0,0,0,0,0,0,0" L="800" H="40" c="3" Y="380" T="10" X="3200" /><S L="40" X="3225" H="12" Y="354" T="9" P="0,0,,,,0,0,0" /><S L="20" H="20" X="3110" Y="352" T="9" P="0,0,,,,0,0,0" /><S L="12" H="20" X="3215" Y="270" T="9" P="0,0,,,,0,0,0" /><S L="12" X="3115" H="40" Y="288" T="9" P="0,0,,,,0,0,0" /><S L="12" H="40" X="3410" Y="240" T="9" P="0,0,,,,0,0,0" /><S L="12" X="3460" H="20" Y="295" T="9" P="0,0,,,,0,0,0" /><S L="40" H="12" X="3080" Y="355" T="9" P="0,0,,,,0,0,0" /><S L="260" H="10" X="2930" Y="356" T="9" P="0,0,,,,0,0,0" /><S L="260" X="3375" H="10" Y="355" T="9" P="0,0,,,,0,0,0" /><S L="12" H="40" X="3500" Y="380" T="9" P="0,0,,,,0,0,0" /><S L="85" H="10" X="3162" Y="356" T="9" P="0,0,,,,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="80" X="2625" c="3" Y="295" T="6" H="30" /><S P="0,0,0,0,-60,0,0,0" L="80" X="2675" c="3" Y="275" T="10" H="40" /><S X="2815" L="80" H="30" c="3" Y="200" T="6" P="0,0,0,0,-35,0,0,0" /><S H="150" L="30" o="324650" X="3750" c="4" Y="290" T="12" P="0,0,0.3,0.2,0,0,0,0" /><S H="130" L="30" o="324650" X="4260" c="4" Y="294" T="12" P="0,0,0.3,0.2,0,0,0,0" /><S P="0,0,0,0,10,0,0,0" L="80" H="30" c="3" Y="360" T="6" X="3750" /><S H="20" L="60" X="4200" c="3" v="14000" Y="345" T="0" P="0,0,0.3,0.2,270,0,0,0" /><S X="3900" L="40" H="20" c="3" Y="225" T="0" P="0,0,0.3,0.2,45,0,0,0" /><S X="4200" L="80" H="30" c="3" Y="350" T="6" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0.3,0.2,0,0,0,0" L="30" o="324650" X="3945" c="4" Y="295" T="12" H="130" /><S X="4250" L="120" H="30" c="3" Y="215" T="10" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,-40,0,0,0" L="80" H="30" c="3" Y="200" T="6" X="3765" /><S X="3910" L="120" H="20" c="3" Y="305" T="6" P="0,0,0,0,-5,0,0,0" /><S P="0,0,0,0,20,0,0,0" L="80" X="3720" c="3" Y="285" T="6" H="20" /><S P="0,0,0,0,30,0,0,0" L="80" X="3675" c="3" Y="265" T="10" H="20" /><S H="20" L="120" X="3770" c="3" Y="200" T="10" P="0,0,0,0,-10,0,0,0" /><S H="20" L="80" X="4000" c="3" Y="300" T="10" P="0,0,0.2,0.3,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="200" H="20" c="3" Y="350" T="10" X="4175" /><S P="0,0,0,0,10,0,0,0" L="80" X="4485" c="3" Y="355" T="6" H="30" /><S H="20" L="20" X="4550" c="3" Y="295" T="0" P="0,0,0.3,0.2,45,0,0,0" /><S P="0,0,0.3,0.2,45,0,0,0" L="20" H="20" c="3" Y="240" T="0" X="4465" /><S X="4645" L="20" H="20" c="3" Y="245" T="0" P="0,0,0.3,0.2,45,0,0,0" /><S P="0,0,0.3,0.2,225,0,0,0" L="20" H="20" c="3" Y="205" T="0" X="4555" /><S X="4375" L="20" H="20" c="3" Y="205" T="0" P="0,0,0,0,45,0,0,0" /><S P="0,0,0.3,0.2,45,0,0,0" L="20" X="4710" c="3" Y="200" T="0" H="20" /><S X="4630" L="20" H="20" c="3" Y="160" T="0" P="0,0,0.3,0.2,45,0,0,0" /><S P="0,0,0.3,0.2,45,0,0,0" L="20" X="4470" c="3" Y="165" T="0" H="20" /><S H="30" L="120" X="4165" c="3" Y="235" T="10" P="0,0,0,0,-35,0,0,0" /><S X="4210" L="80" H="30" c="3" Y="200" T="6" P="0,0,0,0,-10,0,0,0" /><S P="0,0,0,0,-10,0,0,0" L="80" X="3945" c="3" Y="240" T="6" H="30" /><S X="4250" L="20" H="20" c="3" Y="200" T="0" P="0,0,0.3,0.2,225,0,0,0" /><S H="20" L="20" X="4000" c="3" Y="145" T="0" P="0,0,0.3,0.2,45,0,0,0" /><S P="0,0,0.3,0.2,45,0,0,0" L="20" H="20" c="3" Y="190" T="0" X="4070" /><S X="3875" L="20" H="20" c="3" Y="140" T="0" P="0,0,0.3,0.2,225,0,0,0" /><S H="30" L="80" X="4450" c="3" Y="350" T="6" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="120" X="4680" c="3" Y="345" T="10" H="30" /><S H="30" L="80" X="4620" c="3" Y="350" T="6" P="0,0,0,0,-30,0,0,0" /><S H="40" L="2000" X="3800" c="3" Y="380" T="10" P="0,0,0.3,0,0,0,0,0" /><S L="1920" H="50" X="960" Y="375" T="9" P="0,0,,,,0,0,0" /><S L="880" X="2360" H="100" Y="350" T="9" P="0,0,,,,0,0,0" /><S c="3" L="3000" o="6a7495" H="10" X="1500" Y="405" T="12" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="2400" o="6a7495" X="1200" c="3" Y="-5" T="12" H="10" /><S H="10" L="2400" o="6a7495" X="3600" c="3" Y="-5" T="12" P="0,0,0,0,0,0,0,0" /><S H="400" L="10" o="6a7495" X="-5" c="3" Y="200" T="12" P="0,0,0,0,0,0,0,0" /><S P="0,0,0,0,0,0,0,0" L="10" o="6a7495" X="4805" c="3" Y="200" T="12" H="400" /></S><D /><O><O C="11" Y="150" P="0" X="200" /><O C="11" Y="340" X="580" P="0" /><O C="11" Y="60" P="0" X="1050" /><O C="11" Y="345" P="0" X="2110" /><O C="11" Y="350" X="1570" P="0" /><O C="11" Y="265" X="1415" P="0" /><O C="11" Y="350" P="0" X="2610" /><O C="11" Y="130" X="3510" P="0" /><O C="11" Y="135" P="0" X="2930" /><O C="11" Y="170" X="4285" P="0" /><O C="11" Y="115" P="0" X="4645" /><O C="11" Y="270" X="3875" P="0" /></O></Z></C>'},
  {n = "Pirate Invasion (Tomstoms)", Width = 4800, Height = 800,
    XML = '<C><P Ca="" F="8" L="4800" /><Z><S><S H="10" L="200" X="796" c="4" Y="279" T="0" P="0,0,0.3,0.2,-100,0,0,0" /><S P="0,0,0.3,0.2,-80,0,0,0" L="300" X="598" c="4" Y="233" T="0" H="10" /><S P="0,0,0,0,,0,0,0" L="64" X="33" c="3" Y="266" T="5" H="265" /><S P="0,0,0,0,60,0,0,0" L="171" X="65" c="3" Y="233" T="5" H="100" /><S P="0,0,0,0.2,-40,0,0,0" L="10" H="78" c="3" Y="340" T="0" X="352" /><S P="0,0,0,0,-80,0,0,0" L="10" X="461" c="3" Y="334" T="0" H="400" /><S P="0,0,0,0,-120,0,0,0" L="10" X="855" c="3" Y="360" T="0" H="100" /><S P="0,0,0,0,-120,0,0,0" L="10" H="100" c="3" Y="284" T="0" X="985" /><S P="0,0,0,0.2,-150,0,0,0" L="10" H="40" c="3" Y="352" T="0" X="1063" /><S P="0,0,0,0,40,0,0,0" L="171" H="150" c="3" Y="369" T="5" X="139" /><S P="0,0,0,0,10,0,0,0" L="100" X="270" c="3" Y="386" T="5" H="65" /><S P="0,0,0,0,-80,0,0,0" L="10" H="200" c="3" Y="287" T="0" X="588" /><S P="0,0,0,0.2,,0,0,0" L="1200" H="40" c="1" Y="380" T="5" X="600" /><S P="0,0,0,0.2,-80,0,0,0" L="10" X="597" c="3" Y="233" T="0" H="150" /><S P="0,0,0,0.2,-80,0,0,0" L="10" H="100" c="3" Y="182" T="0" X="606" /><S P="0,0,0.3,0.2,10,0,0,0" L="83" o="ffffff" X="659" c="4" Y="120" T="12" H="46" /><S P="0,0,0,0,-210,0,0,0" L="10" X="1044" c="3" Y="291" T="0" H="110" /><S P="0,0,0,0.2,-100,0,0,0" L="10" X="791" c="3" Y="254" T="0" H="100" /><S P="0,0,0,0.2,-100,0,0,0" L="10" H="120" c="3" Y="307" T="0" X="802" /><S X="1602" L="10" H="200" c="4" Y="293" T="0" P="0,0,0,0.2,180,0,0,0" /><S L="400" H="17" X="1600" Y="370" T="9" P="0,0,,,,0,0,0" /><S L="200" X="2100" H="17" Y="370" T="9" P="0,0,,,,0,0,0" /><S c="3" L="40" H="20" X="1793" N="" Y="380" T="5" P="0,0,0,0.2,-40,0,0,0" /><S c="3" L="10" H="150" X="2013" Y="343" T="0" P="0,0,0,0,95,0,0,0" /><S P="0,0,0,0.2,160,0,0,0" L="10" X="1299" c="4" Y="300" T="0" H="150" /><S c="3" L="40" X="2009" H="20" N="" Y="380" T="5" P="0,0,0,0.2,40,0,0,0" /><S c="3" L="10" X="1317" H="150" Y="347" T="0" P="0,0,0,0,70,0,0,0" /><S P="0,0,0,0.2,40,0,0,0" L="40" H="20" c="3" N="" Y="382" T="5" X="1409" /><S P="0,0,0,0.2,-40,0,0,0" L="40" X="2192" c="3" N="" Y="380" T="5" H="20" /><S c="1" L="200" X="1300" H="40" N="" Y="381" T="5" P="0,0,0,0.2,,0,0,0" /><S c="3" L="10" H="100" X="1905" Y="367" T="0" P="0,0,0,0,50,0,0,0" /><S c="3" L="10" X="2305" H="60" Y="348" T="0" P="0,0,0,0,375,0,0,0" /><S c="3" L="10" X="2237" H="150" Y="364" T="0" P="0,0,0,0,285,0,0,0" /><S c="3" L="10" X="2096" H="50" Y="370" T="0" P="0,0,0,0,150,0,0,0" /><S c="3" L="10" H="50" X="2244" Y="351" T="0" P="0,0,0,0,375,0,0,0" /><S c="3" L="10" X="1760" H="150" Y="333" T="0" P="0,0,0,0,35,0,0,0" /><S c="3" L="10" X="1819" H="150" Y="333" T="0" P="0,0,0,0,330,0,0,0" /><S L="200" H="40" X="2300" N="" Y="380" T="5" P="0,0,0,0.2,,0,0,0" /><S L="200" X="1900" H="40" N="" Y="380" T="5" P="0,0,0,0.2,,0,0,0" /><S L="200" H="20" X="2100" N="" Y="390" T="5" P="0,0,0,0.2,,0,0,0" /><S L="400" X="1600" H="20" N="" Y="390" T="5" P="0,0,0,0.2,,0,0,0" /><S c="3" L="10" H="200" X="1600" Y="327" T="0" P="0,0,0,0,90,0,0,0" /><S c="3" L="10" X="1601" H="100" Y="273" T="0" P="0,0,0.1,0.2,90,0,0,0" /><S c="3" L="10" H="100" X="1299" Y="301" T="0" P="0,0,0,0,70,0,0,0" /><S P="0,0,0,0.2,-15,0,0,0" L="15" H="70" c="4" Y="207" T="0" X="2626" /><S H="120" L="15" X="2686" c="4" Y="289" T="0" P="0,0,0,0.2,-15,0,0,0" /><S P="0,0,0,0.2,20,0,0,0" L="15" X="3101" c="4" Y="183" T="0" H="350" /><S X="2807" L="15" H="380" c="4" Y="177" T="0" P="0,0,0,0.2,-15,0,0,0" /><S c="3" L="10" H="30" X="2663" Y="173" T="0" P="0,0,0,0,-15,0,0,0" /><S P="0,0,0,0.2,20,0,0,0" L="12" X="2548" c="4" Y="219" T="0" H="70" /><S c="3" L="10" X="2593" H="150" Y="178" T="0" P="0,0,0,0,-105,0,0,0" /><S c="3" L="10" H="250" X="2732" Y="215" T="0" P="0,0,0,0,-105,0,0,0" /><S P="0,0,0,0.2,30,0,0,0" L="15" H="120" c="4" Y="353" T="0" X="3296" /><S c="3" L="10" X="2531" H="120" Y="237" T="0" P="0,0,0,0,-195,0,0,0" /><S L="1100" H="40" X="3050" Y="380" T="9" P="0,0,,,,0,0,0" /><S c="3" L="10" H="100" X="2588" Y="345" T="0" P="0,0,0,0,-125,0,0,0" /><S c="3" L="10" X="2580" H="60" N="" Y="379" T="0" P="0,0,0,0,-215,0,0,0" /><S c="3" L="50" H="50" X="2554" N="" Y="390" T="5" P="0,0,0,0.2,-30,0,0,0" /><S X="3174" L="15" H="110" c="4" Y="288" T="0" P="0,0,0,0.2,20,0,0,0" /><S c="3" L="10" X="2830" H="200" Y="370" T="0" P="0,0,0,0,-105,0,0,0" /><S L="164" X="2482" H="40" N="" Y="380" T="5" P="0,0,0,0.2,,0,0,0" /><S c="3" L="10" X="3144" H="300" Y="385" T="0" P="0,0,0,0,-70,0,0,0" /><S c="3" L="10" H="200" X="3143" Y="222" T="0" P="0,0,0,0,-70,0,0,0" /><S c="3" L="10" H="300" X="3425" Y="363" T="0" P="0,0,0,0,-60,0,0,0" /><S c="3" L="10" X="2788" H="250" Y="263" T="0" P="0,0,0,0,-105,0,0,0" /><S c="3" L="10" H="250" X="3111" Y="270" T="0" P="0,0,0,0,-70,0,0,0" /><S c="3" L="10" X="3327" H="110" Y="377" T="0" P="0,0,0,0,-60,0,0,0" /><S c="3" L="10" H="100" X="3182" Y="348" T="0" P="0,0,0,0,-70,0,0,0" /><S c="3" L="10" X="2869" H="100" Y="299" T="0" P="0,0,0,0,-105,0,0,0" /><S c="3" L="10" H="100" X="2722" Y="345" T="0" P="0,0,0,0,-105,0,0,0" /><S c="3" L="10" X="3045" H="100" Y="298" T="0" P="0,0,0,0,-70,0,0,0" /><S c="4" L="15" X="2767" H="250" Y="29" T="0" P="0,0,0,0.2,-105,0,0,0" /><S c="4" L="15" H="250" X="3140" Y="77" T="0" P="0,0,0,0.2,-70,0,0,0" /><S L="1200" o="6a7495" X="3000" H="10" Y="405" T="12" P="0,0,0,0.2,,0,0,0" /><S P="0,0,0,0,100,0,0,0" L="15" H="100" c="3" Y="160" T="0" X="4760" /><S c="3" L="10" X="4497" H="70" Y="401" T="0" P="0,0,0,0,40,0,0,0" /><S P="0,0,0,0.2,-50,0,0,0" L="15" H="300" c="4" Y="287" T="0" X="4575" /><S c="3" L="10" X="4657" H="70" Y="341" T="0" P="0,0,0,0,110,0,0,0" /><S c="3" L="10" H="140" X="3723" Y="352" T="0" P="0,0,0,0,40,0,0,0" /><S c="3" L="10" X="4676" H="70" Y="358" T="0" P="0,0,0,0,40,0,0,0" /><S c="3" L="10" H="70" X="4693" Y="173" T="0" P="0,0,0,0,40,0,0,0" /><S X="1500" P="0,0,0,0,0,0,0,0" L="3000" o="6a7495" H="10" c="3" Y="-5" T="12" /><S P="0,0,0,0,0,0,0,0" H="10" L="1800" o="6a7495" X="3900" c="3" Y="-5" T="12" /><S L="1200" X="4200" H="40" Y="380" T="9" P="0,0,,,,0,0,0" /><S P="0,0,0,0.2,80,0,0,0" L="158" X="4756" c="3" N="" Y="234" T="5" H="100" /><S P="0,0,0,0.2,,0,0,0" L="15" X="4380" c="4" Y="335" T="0" H="130" /><S X="4280" L="15" H="130" c="4" Y="335" T="0" P="0,0,0,0.2,,0,0,0" /><S P="0,0,0,0.2,110,0,0,0" L="158" H="130" c="3" N="" Y="357" T="5" X="4751" /><S P="0,0,0,0.2,160,0,0,0" L="158" X="4655" c="3" N="" Y="400" T="5" H="54" /><S P="0,0,0.3,0.2,,0,0,0" L="1200" o="6a7495" H="10" Y="405" T="12" X="4200" /><S c="3" L="10" X="4588" H="140" Y="292" T="0" P="0,0,0,0,40,0,0,0" /><S c="3" L="10" H="70" X="4695" Y="262" T="0" P="0,0,0,0,50,0,0,0" /><S c="3" L="10" H="120" X="4541" Y="258" T="0" P="0,0,0,0,40,0,0,0" /><S c="3" L="10" X="4501" H="100" Y="225" T="0" P="0,0,0,0,40,0,0,0" /><S P="0,0,0,0.2,,0,0,0" L="15" X="4180" c="4" Y="335" T="0" H="130" /><S H="130" L="15" X="4080" c="4" Y="335" T="0" P="0,0,0,0.2,,0,0,0" /><S P="0,0,0,0.2,,0,0,0" L="15" H="130" c="4" Y="335" T="0" X="3980" /><S X="3880" L="15" H="130" c="4" Y="335" T="0" P="0,0,0,0.2,,0,0,0" /><S c="3" L="10" X="4380" H="50" Y="270" T="0" P="0,0,0,0.2,90,0,0,0" /><S c="3" L="10" H="50" X="4280" Y="270" T="0" P="0,0,0.3,0.2,90,0,0,0" /><S c="3" L="10" X="4180" H="50" Y="270" T="0" P="0,0,0.3,0.2,90,0,0,0" /><S c="3" L="10" H="50" X="4080" Y="270" T="0" P="0,0,0.3,0.2,90,0,0,0" /><S c="3" L="10" X="3980" H="50" Y="270" T="0" P="0,0,0.3,0.2,90,0,0,0" /><S c="3" L="10" H="50" X="3880" Y="270" T="0" P="0,0,0,0,90,0,0,0" /><S c="3" L="10" X="4130" H="130" Y="320" T="0" P="0,0,0.3,0.2,90,0,0,0" /><S c="3" L="10" H="130" X="3930" Y="355" T="0" P="0,0,0,0,90,0,0,0" /><S c="3" L="10" X="4330" H="130" Y="355" T="0" P="0,0,0,0,90,0,0,0" /><S c="3" L="10" H="130" X="3782" Y="370" T="0" P="0,0,0,0,40,0,0,0" /><S c="3" L="10" X="3798" H="130" Y="348" T="0" P="0,0,0,0,-30,0,0,0" /></S><D /><O><O C="11" Y="335" P="0" X="300" /><O C="11" Y="320" X="1010" P="0" /><O C="11" Y="130" P="0" X="590" /><O C="11" Y="245" P="0" X="1340" /><O C="11" Y="320" X="2280" P="0" /><O C="11" Y="220" P="0" X="1820" /><O C="11" Y="155" P="0" X="2540" /><O C="11" Y="370" X="3005" P="0" /><O C="11" Y="365" P="0" X="3370" /><O C="11" Y="255" P="0" X="3765" /><O C="11" Y="110" X="4670" P="0" /><O C="11" Y="375" P="0" X="4345" /></O></Z></C>'},
}

local translations = {
  en = {
    deathMessages = {
      "has been murdered by", "has been stabbed to death by", "was unable to withstand", "was brought down by", "got attacked by the wild", "was not able to escape the attacks of", "lost all her hearts due to", "got finished off by", "died due to sticky circumstances from", "got dongled to death by", "was driven into a corner by", "turned into bubbles due to", "bamboozled to death by"
    },
    potionEffects = {
      Healing = "+1 Heart.",
      Leaping = "Higher jump.",
      Swiftness = "Faster movement.",
      Strength = "+40% Damage per hit.",
      Resistance = "+40% protection from shield.",
      Dexterity = "-1s Hit cooldown.",
      Levitation = "Levitate freely.",
      Thorns = "Share 1/2 damage with dealer.",
      Regeneration = "Recover 0.5 hearts every 500ms.",
    },
    usedShield = "You have used your shield!",
    cantShield = "You can't use your shield!",
    stoppedShield = "You have stopped using your shield!",
    cantHit = "You can't hit while using your shield!",
    criticalHit = "You can't use your shield for %ss!",
    criticalHitEnd = "You can use your shield again!",
    hitSuccess = "You have done a critical hit on %s dealing %s hearts of damage!",
    deathFromThorns = "%s has died from %s's Thorns potion!",
    canAttackAgain = "You can attack again!",
    cantAttack = "You have to wait %ss till you can attack again!",
    spectating = "You are currently spectating %s!",
    pointsRefilled = "Points have been refilled!",
    deathFromBorder = "%s has been killed by the World Border!",
    gameStarting = "You can start killing each other in %ss..",
    gameStart = "Game is now starting!",
    gameEnding = "The game will reset in %ss..",
    lastPersonStanding = "%s is the last person standing! GG and Congrats!",
    lastTeamStanding = "Team %s is the last team standing! GG and Congrats!",
    cantAfford = "You cannot afford to buy %s! It requires %s points.",
    equippedWeapon = "You have equipped %s as your weapon!",
    doesntExist = "That item does not exist.",
    boughtPotion = "You have bought a %s potion!",
    usedPotion = "You have used a %s potion (%s left)!",
    usedPotionEnd = "Your %s potion has run out (%s left).",
    noPotion = "You do not have a %s potion!",
    setSetting = "You have set %s to %s (Default: %s).",
    helpMenu = "Welcome to the info guide for <b>Killer Games' 1.4</b>!<br>Your goal as a mouse is to be the last mouse standing by killing everyone!<br><br>Hit <b>spacebar</b> to do a <u>melee</u> attack.<br>Press <b>spacebar</b> while <b>jumping</b> to do a critical melee attack. This <u>cancels</u> shields.<br>Hold <b>down/s</b> to use your <u>shield.</u><br>Press <b>E</b> beside a <b>+1</b> to <u>collect</u> a point. This is used for shopping.<br>Press the <b>PT bar</b> to open the <u>shop.</u><br><br>Do !commands for commands, and !controls for more controls.",
    commandsMenu = "Welcome to the commands guide for <b>Killer Games</b>!<br><br><u>Normie Commands</u><br>!stats [name] - view stats.<br>!shop - open the shop.<br>!weapon - view details about your equipped stick.<br>!join [name] - join (near a team-member) or create a team.<br>!leave [name] - leave a team.<br>!stick [name] - buy a stick.<br>!potion [name] - buy a potion.<br>!use [name] - use a potion.<br><br><u>Admin Commands</u><br>!time [num] - change the time.<br>!kill [name] - kill the said player.<br>!set [setting] [num] - set the speed or max of a setting to num.<br>![name] [num] - give the said player num points.",
    controlsMenu = "Welcome to the controls guide for <b>Killer Games</b>!<br><br>Spacebar - Do a melee attack.<br>Spacebar while jumping - Critical melee attack to cancel a shield.<br>Down - Use your shield.<br>E - Collect a point when beside it.<br>1 to 9 - Use a potion (or buy if empty).",
    weaponsDescribe = "You are currently using %s! You deal %s hearts of damage every %ss from a proper hit!",
    joinedTeam = "You have joined Team %s thanks to %s!",
    createdTeam = "You have created Team %s!",
    leaveTeam = "You have left Team %s!",
    noExistTeam = "That team does not exist.",
    cantJoinTeam = "You have to be close to a member of Team %s to join them!",
  },
  es = {
    deathMessages = {
      "ha sido asesinado por", "ha sido apuñalado hasta la muerte por", "era incapaz de soportar", "fue derribado por", "ha sido dañado por la naturaleza", "no pudo escapar de los ataques de", "perdió todos sus corazones por culpa de ", "fue rematado por", "murió debido a las circunstancias pegajosas de ", "fue llevado a la muerte por", "fue arrastrado a la esquina por", "se convirtió en burbujas por culpa de ", "fue engañado y llevado a la muerte por"
    },
    potionEffects = {
      Healing = "+1 Corazón",
      Leaping = "Saltas más alto.",
      Swiftness = "Te mueves más rápido.",
      Strength = "+40% de daño por golpe.",
      Resistance = "+40% de resistencia con el escudo.",
      Dexterity = "-1s de tiempo de carga.",
      Levitation = "Levitas libremente.",
      Thorns = "Compartes la mitad del daño con el atacante.",
      Regeneration = "Regeneras 0.5 corazones cada 500ms.",
    },
    usedShield = "Has ocupado tu escudo.",
    cantShield = "No puedes usar tu escudo.",
    stoppedShield = "Ya no estás usando tu escudo.",
    cantHit = "No puedes atacar mientras estás usando tu escudo.",
    criticalHit = "No puedes usar tu escudo por %ss",
    criticalHitEnd = "Puedes usar tu escudo nuevamente",
    hitSuccess = "Has hecho un ataque crítico a %s (%s dommage)",
    deathFromThorns = "%s ha muerto por la poción de espinas de %s",
    canAttackAgain = "Puedes atacar nuevamente.",
    cantAttack = "¡Debes esperar %ss para poder volver a atacar!",
    spectating = "¡Estas observando a %s!",
    pointsRefilled = "¡Los puntos fueron reabastecidos!",
    deathFromBorder = "¡%s ha muerto por el Borde del Mundo!",
    gameStarting = "Pueden comenzar a atacarse en %ss..",
    gameStart = "¡El juego está comenzando!",
    gameEnding = "¡El juego termina en %ss..",
    lastPersonStanding = "¡%s es el último jugador en pie! ¡GG y Felicidades!",
    lastTeamStanding = "¡El equipo %s es el ganador! ¡GG y Felicidades!",
    cantAfford = "¡No puedes comprar %s! Se necesitan %s puntos.",
    equippedWeapon = "¡Tu nueva arma es %s!",
    doesntExist = "Ese item no existe.",
    boughtPotion = "Has comprado la poción %s",
    usedPotion = "¡Has usado la poción %s (%s restantes)!",
    usedPotionEnd = "Se ha terminado el efecto de la poción %s (%s restantes).",
    noPotion = "No tienes la poción %s",
    setSetting = "Has definido %s a %s (Por defecto: %s)",
    helpMenu = "¡Bienvenido/a a la guía de información de <b>Killer Games' 1.4</b>!<br>¡Tu objetivo como ratón es ser el último en pie, eliminando a todos los demas!<br><br>Presiona <b>espacio</b> para hacer un ataque <u>cuerpo a cuerpo</u>.<br>Presiona <b>espacio</b> mientras <b>saltas</b> para realizar un ataque cuerpo a cuerpo crítico. Esto <u>cancela</u> el escudo.<br> Mantén apretada la tecla <b>abajo/s</b> para usar tu <u>escudo.</u><br> Presiona <b>E</b> cerca de un <b>+1</b> para <u>obtener</u> un punto. Los puntos se ocupan para hacer compras en la tienda.<br> Presiona la <b>barra PT</b> para abrir la <u>tienda</u><br><br> Escribe !commands para conocer los comandos, y !controls para mas controles.",
    commandsMenu = "¡Bienvenido/a a la guía de comandos de <b>Killer Games' 1.4</b>!<br><br><u>Comandos normales</u><br>!stats [nombre] - ve las estadísticas de alguna persona.<br>!shop - abre la tienda.<br>!weapon - ve los detalles del arma que tienes equipada.<br>!join [nombre] - unirse (junto a un miembro de equipo) o crear un equipo.<br>!leave [nombre] - dejar un equipo.<br>!stick [nombre] - comprar un palo.<br>!potion [nombre] - comprar una poción.<br>!use [nombre] - usar una poción.<br><br><u>Comandos de administrador</u><br>!time [num] - cambia el tiempo.<br>!kill [nombre] - mata al jugador elegido.<br>!set [setting] [num] - define la velocidad o valor máximo de un ajuste en número.<br>![nombre] [num] - le da a un jugador num puntos.",
    controlsMenu = "¡Bienvenido/a a la guía de controles de <b>Killer Games' 1.4</b>!<br><br>Espacio - Ataque cuerpo a cuerpo.<br>Espacio mientras saltas - Un ataque cuerpo a cuerpo crítico que cancela un escudo.<br> Flecha abajo - Usas tu escudo.<br> E - Colectas un punto si estas cerca de él.<br> 1 a 9 - Usas una poción (o la compras si no la tienes).",
    weaponsDescribe = "¡Estas usando %s! ¡Haces %s corazones de daño cada %ss por golpe!",
    joinedTeam = "!Te has unido al equipo %s gracias a %s!",
    createdTeam = "¡Has creado el equipo %s!",
    leaveTeam = "¡Has abandonado el equipo %s!",
    noExistTeam = "Este equipo no existe.",
    cantJoinTeam = "¡Tienes que estar cerca de un miembro del equipo %s para unirte a ese equipo!",
  },
  fr = {
    deathMessages = {
      "a été tué par", "a été poignardé par", "a été abattu par", "a été attaqué sauvagement par", "n'a pas réussi à éviter les puissantes attaques de", "a perdu tous ses coeurs à cause de", "a été ramassé par", "est mortde circonstances collantes de", "s'est fait défoncé par", "s'est fait roulé dessus par", "s'est fait transformer en bulles à cause de", "s'est fait battu à mort par"
    },
    potionEffects = {
      Healing = "+1 Coeur.",
      Leaping = "Plus grands sauts.",
      Swiftness = "Vitesse de déplacement accrue.",
      Strength = "+40% de dégats par coup.",
      Resistance = "+40% de protection sur le bouclier.",
      Dexterity = "-1s de temps de recharge.",
      Levitation = "Lévitation libre.",
      Thorns = "Rends la moitié des dégats à l'attaquant.",
      Regeneration = "Récupération de 0.5 coeurs toutes les 500ms.",
    },
    usedShield = "Tu as utilisé ton bouclier!",
    cantShield = "Tu ne peux pas utiliser ton bouclier!",
    stoppedShield = "Tu as arreté d'utiliser ton bouclié",
    cantHit = "Tu ne peux pas attaquer lorsque tu utilises ton bouclier!",
    criticalHit = "Tu ne peux plus utiliser ton bouclier pendant %ss!",
    criticalHitEnd = "Tu peux de nouveau utiliser ton bouclier!",
    hitSuccess = "Tu as fait un coup critique à %s lui enlevant %s coeurs de dégats!",
    deathFromThorns = "%s a été tué par la potion Épine de %s!",
    canAttackAgain = "Tu peux de nouveau attaquer!",
    cantAttack = "Tu dois attendre %ss avant de pouvoir réattaquer.",
    spectating = "Tu es en train de regarder le point de vue de %s!",
    pointsRefilled = "Les points on été remplis!",
    deathFromBorder = "%s a été tué par la Bordure!",
    gameStarting = "Vous pouvez commencer à vous tuer dans %ss...",
    gameStart = "Le jeu commence maintenant",
    gameEnding = "Réinitialisation du jeu dans %ss",
    lastPersonStanding = "%s est le dernier survivant! GG !",
    lastTeamStanding = "L'équipe %s est la dernière survivante! GG !",
    cantAfford = "Tu n'as pas assez de points pour acheter l'item %s! Il coûte %s points.",
    equippedWeapon = "Tu t'es équipé de l'arme %s!",
    doesntExist = "Cet item n'existe pas.",
    boughtPotion = "Tu viens d'acheter la potion de %s!",
    usedPotion = "Tu as utilisé une potion de %s (%s restantes).",
    usedPotionEnd = "Tu as utilisé ta dernière potion de %s (%s restantes).",
    noPotion = "Tu n'as pas de potion de %s.",
    setSetting = "Tu as mis %s à %s (Par défault: %s).",
    helpMenu = "Bienvenue dans le guide d'aide pour <b>Killer Games' 1.4</b>!<br>Le but est d'être la dernière souris survivante en tuant tout le monde!<br><br>Appuies sur <b>espace</b> pour faire une attaque de <u>mélée</u>.<br>Appuies sur <b>espace</b> pendant que tu <b>sautes</b> pour faire un coup critique. Ça <u>annule</u> le bouclier.<br>Garde la touche <b>bas/s</b> enfoncée pour utiliser ton <u>bouclier.</u><br>Appuies sur <b>E</b> à côté d'un <b>+1</b> pour <u>collecter</u> un point. Ceux-ci sont utilisés pour acheter des armes/potions dans le magasin.<br>Appuies sur la <b>barre PT</b> pour ouvrir le <u>magasin.</u><br><br>Dis !commands pour afficher les commandes, et !controls pour les contôles.",
    commandsMenu = "Bienvenue dans le guide des commandes pour <b>Killer Games</b>!<br><br><u>Commandes</u><br>!stats [nom] - affiche les stats.<br>!shop - ouvre le magasin.<br>!weapon - affiche des détails sur l'arme équipée.<br>!join [nom] - rejoindre une équipe (tu dois être près d'un membre de cette équipe) ou en créer une.<br>!leave [nom] - quitter une équipe.<br>!stick [nom] - acheter une arme.<br>!potion [nom] - acheter une potion.<br>!use [nom] - utiliser une potion.<br><br><u>Comandes pour les admins</u><br>!time [nombre] - change le temps restant.<br>!kill [nom] - tue le joueur.<br>!set [setting] [nombre] - régle la vitesse ou le maximum d'un paramètre avec un nombre.<br>![nom] [nombre] - donne au joueur un nombre de points.",
    controlsMenu = "Bienvenue dans le guide des contrôles pour <b>Killer Games</b>!<br><br>Espace - Faire une attaque de mélée.<br>Espace en sautant - Fais un coup critique et annule le bouclier.<br>Bas - Utilise le bouclier.<br>E - Récolte un point proche de soi.<br>Les raccourcis de 1 à 9 - utilise une potion (ou en achète une si tu n'en as plus).",
    weaponsDescribe = "Tu utilises %s! Tu fais %s coeurs de dégats par coup avec un temps de rechargement de %ss!",
    joinedTeam = "Tu as rejoinds l'équipe %s grâce à %s!",
    createdTeam = "Tu as crée l'équipe %s!",
    leaveTeam = "Tu as quitté l'équipe %s!",
    noExistTeam = "Cette équipe n'existe pas.",
    cantJoinTeam = "Tu dois être proche d'un membre de l'équipe %s pour la rejoindre!",
  },
  tr = {
    deathMessages = {
      "katledildi. Tebrikler,", "bıçaklanarak katledildi. Aferin,", "daha fazla dayanamadı. Katil:", "diz çöktü. Büyük iş,", "vahşice saldırıya uğradı! Dehşet-ül Vahşet,", "saldırıdan kaçamadı. Saldırgan:", "canını yitirdi. Sebebi,", "Buraya kadar! Cani:", "dürtmeler sonucu öldü. Dürten:", "ölüme daldı. Yüzme öğretmeni:", "köşeye sürüldü. Şoför:", "kabarcıklar yüzünden hayatını kaybetti. Kabarcıkların sahibi:", "boğazlanarak katledildi. Boğazlayan:"
    },
    potionEffects = {
      Healing = "+1 Kalp.",
      Leaping = "Yüksek zıplama.",
      Swiftness = "Hızlı hareket etme.",
      Strength = "Her vuruşta +%40 hasar.",
      Resistance = "+%40 kalkan korunması.",
      Dexterity = "-1s bekleme süresi.",
      Levitation = "Havada kalma.",
      Thorns = "Saldırganla yarı yarıya hasar paylaşımı.",
      Regeneration = "Her 500 milisaniyede 0,5 kalp kazanma.",
    },
    usedShield = "Kalkanını kullandın!",
    cantShield = "Kalkanını kullanamazsın!",
    stoppedShield = "Kalkanını kullanmayı bıraktın!",
    cantHit = "Kalkanını kullanırken saldıramazsın!",
    criticalHit = "Kalkanını %ss için kullanamazsın!",
    criticalHitEnd = "Kalkanını tekrar kullanabilirsin!",
    hitSuccess = "%s üzerinde ciddi vuruş yaptın. %s hasara mal oldu (%s hasar)!",
    deathFromThorns = "%s, %s tarafından kullanılan dikenler iksiri ile katledildi!",
    canAttackAgain = "Tekrar saldırabilirsin!",
    cantAttack = "%ss tekrar saldırana kadar beklemelisin!",
    spectating = "Şuan izlediğin: %s!",
    pointsRefilled = "Puanlar yeniden yüklendi!",
    deathFromBorder = "%s Yeryüzünün Seddi tarafından katledildi!",
    gameStarting = "%ss içinde birbirinizi öldürmeye başlayabilirsiniz...",
    gameStart = "Oyun başlıyor!",
    gameEnding = "%ss içinde oyun tekrar başlayacak...",
    lastPersonStanding = "%s, sona kalan kişi! İyi oyundu, tebrikler!",
    lastTeamStanding = "%s Takımı, sona kalan takım! İyi oyundu, tebrikler!",
    cantAfford = "Alacak imkanın yok: %s! %s puan gerekli.",
    equippedWeapon = "Silahın olarak donandın: %s!",
    doesntExist = "Böyle bir öge yok.",
    boughtPotion = "Bir %s iksiri aldın!",
    usedPotion = "Bir %s iksiri kullandın. (%s kaldı.)!",
    usedPotionEnd = "%s iksirin tükeniyor.(%s kaldı.).",
    noPotion = "%s iksirine sahip değilsin!",
    setSetting = "%s, %s olarak değiştirildi. (Varsayılan: %s).",
    helpMenu = "<b>Killer Games' 1.4</b> Rehberi'ne hoş geldin!<br>Bir fare olarak senin hedefin, herkesi öldürerek sona kalmak!<br><br><u>Düz</u> saldırı için <b>boşluk tuşu</b>'na bas.<br> Ciddi saldırı yapmak için <u>zıplarken</u> <b>boşluk tuşu</b>na bas. Fakat bunu yapmak kalkan kullanmana <u>izin vermez</u>.<br><u>Kalkan ını kullanmak</u> için <b>aşağı ya da 'S' tuşu</b>na basılı tut.<br><b>'+1'</b>in yanında <b>'E' tuşu</b>na basarak puan <u>topla</u>. Puanları daha sonra alışveriş için kullanacaksın.<br><b>'PT' bar tuşu</b>na basarak <u>market</u>i açabilirsin.<br><br>Komutlara ulaşmak için '!commands' yazabilir ve kontrollere ulaşmak için '!controls' yazabilirsin.",
    commandsMenu = "<b>Killer Games</b> Komutlar Rehberi'ne hoş geldin!<br><br><u>Standart Komutlar</u><br>!stats [isim] - Sayıtımlara(istatistiklere) ulaş.<br>!shop - Dükkanı aç.<br>!weapon - Donandığın çubukla ilgili ayrıntılara ulaş.<br>!join [isim] - Bir takıma katıl (bir takım üyesine yakın olmalısın) ya da oluştur.<br>!leave [isim] - Bir takımdan ayrıl.<br>!stick [isim] - Bir çubuk satın al.<br>!potion [isim] - Bir iksir satın al.<br>!use [isim] - Bir iksir kullan.<br><br><u>Yönetici Komutları</u><br>!time [sayı] - Zamanı değiştir.<br>!kill [isim] - Yazdığın oyuncu öldür.<br>!set [ayar] [sayı] - Hızı ya da en yüksek sayıyı ayarla.<br>![isim] [sayı] - Yazdığın kişiye puan ver.",
    controlsMenu = "<b>Killer Games</b> Kontroller Rehberi'ne hoş geldin!<br><br>Boşluk tuşu - Düz saldırı yap.<br>Zıplarken boşluk tuşu - Kritik düz saldırı (Kritik düz saldırı yapmak kalkan kullanmana izin vermez.).<br>Aşağı tuşu - Kalkanını kullan.<br>E tuşu - Puanın yanındayken puanı al.<br>1'den 9'a - İksir kullan (eğer boş ise al).",
    weaponsDescribe = "Şu anda kullanıyorsun: %s! Her %ss adamakıllı vuruştan %s hasar vuruyorsun!",
    joinedTeam = "%s Takımı'na katıldın. Teşekkürler %s!",
    createdTeam = "%s Takımı'nı oluşturdun!",
    leaveTeam = "%s Takımı'ndan ayrıldın!",
    noExistTeam = "Böyle bir takım yok.",
    cantJoinTeam = "%s Takımın'a katılabilmek için bir üyesine yakın olmalısın!",
  },
}

local admin = {Onkei = true, Ehw = true, Tomstoms = true, Pie = true, Ninjafood = true}
local bnail, currentMap, players, stats, tasks, teams, tempMaps, tempSettings = {}, {}, {}, {}, {}, {}, {}, {}
local format = string.format
local fightTime = false
local keys = {space = 32, left = 37, up = 38, right = 39, down = 40, a = 65, d = 68, e = 69, q = 81, s = 83, w = 87}
local resetPoints = {Timer = 0}
local worldBorder = {loopCount = 0, Left = {x = -5}, Right = {x = 4805}, Timer = 0}
local changeTime = tfm.exec.setGameTime

local settings = {
  borderSpeed = 30,
  defaultHealth = 16,
  defaultRegen = 0.2,
  potionEffectTime = 30,
  resetPointsSpeed = 300, -- 5 minutes.
  tillFightTimeStart = 50,
  leftKeys = {[keys.left] = true, [keys.a] = true, [keys.q] = true},
  rightKeys = {[keys.right] = true, [keys.d] = true},
  downKeys = {[keys.down] = true, [keys.s] = true},
  upKeys = {[keys.up] = true, [keys.w] = true},
}

local shop = {
  sticks = {
    {n = "None", Cooldown = 1, Damage = 0.5, Range = 20, shieldPercentage = 10, Cost = 0},
    {n = "Swift Stick", Cooldown = 2, Damage = 1, Range = 40, shieldPercentage = 50, Cost = 0},
    {n = "Middle Grove", Cooldown = 4, Damage = 2, Range = 40, shieldPercentage = 40, Cost = 3},
    {n = "Heavy Grove", Cooldown = 8, Damage = 4, Range = 40, shieldPercentage = 20, Cost = 7},
    {n = "Normie Spear", Cooldown = 2, Damage = 1, Range = 60, shieldPercentage = 40, Cost = 3},
    {n = "Bulk Band", Cooldown = 4, Damage = 2, Range = 60, shieldPercentage = 50, Cost = 7},
    {n = "Gillie Halbard", Cooldown = 8, Damage = 4, Range = 60, shieldPercentage = 70, Cost = 10}
  },
  potions = {
    {n = "Healing", Effect = "+1 heart.", Cost = 2},
    {n = "Leaping", Effect = "Higher jump.", Cost = 3},
    {n = "Swiftness", Effect = "Faster movement.", Cost = 3},
    {n = "Strength", Effect = "+40% damage per hit.", Cost = 5},
    {n = "Resistance", Effect = "+40% protection from shield.", Cost = 5},
    {n = "Dexterity", Effect = "-1s hit cooldown.", Cost = 5},
    {n = "Levitation", Effect = "Levitate freely.", Cost = 5},
    {n = "Thorns", Effect = "Share 1/2 damage with dealer.", Cost = 8},
    {n = "Regeneration", Effect = "Regen "..tostring(settings.defaultRegen).." hearts every 500ms.", Cost = 15},
    {n = "Mundo", Effect = "Drink of Savitar.", Cost = 100},
    {n = "Thundo", Effect = "Drink of Beerus.", Cost = 100},
    {n = "Hundho", Effect = "Drink to gain immortality.", Cost = 100}
  },
}

function capitalize(word)
  return word:sub(1, 1):upper() .. word:sub(2):lower()
end

function closeShop(n)
  for i = 100, #shop.potions + 101, 1 do
    ui.removeTextArea(i, n)
  end
end

function constrain(value, min, max)
  local value2 = value
  if value2 > max then value2 = max elseif value2 < min then value2 = min end
  return value2
end

function giveWin(n)
  tfm.exec.giveCheese(n)
  tfm.exec.playerVictory(n)
end

function main()
  local vars = {"AutoNewGame", "AutoShaman", "AutoTimeLeft", "AutoScore", "MinimalistMode", "PhysicalConsumables"}
  for i = 1, #vars do
    tfm.exec["disable" .. vars[i]](true)
  end

  startRound()
end

function map(value, start1, stop1, start2, stop2)
  return ((value - start1) / (stop1 - start1)) * (stop2 - start2) + start2
end

function openShop(n, page)
  ui.addTextArea(100, "", n, 5, 20, 790, 400, 0x324650, 0x000000, 0.8, true)

  if page then
    if page == "weapons" then
      local str = {}
      for i, stick in pairs(shop.sticks) do
        str[i] =
        "<font face='Calibri' size='12'>Name:                     "..stick.n.."<br>"..
        "Damage:                 "..stick.Damage.." ("..stick.Cooldown.."s)<br>"..
        "Shield Protection: "..stick.shieldPercentage.."%<br>"..
        "Cost:                        "..stick.Cost.."<br>"..
        "<p align='center'><b><a href='event:stick_"..i.."'>Buy"
      end
      local x, y = 50, 70
      closeShop(n)
      ui.addTextArea(100, "", n, 5, 20, 790, 400, 0x324650, 0x000000, 0.8, true)
      for i, text in pairs(str) do
        ui.addTextArea(i + 100, text, n, x, y, 200, 78, 0x324650, 0x171918, 0.8, true)
        if x < 550 then x = x + 250 else x = 50 y = y + 100 end
      end
    elseif page == "potions" then
      local str = {}
      for i, pot in pairs(shop.potions) do
        str[i] = 
        "<font face='Calibri' size='12'>Name:   "..pot.n.."<br>"..
        "Effect:    "..(translate('potionEffects', n)[pot.n] or 'Secret').."<br>"..
        "Cost:      "..pot.Cost.."<br>"..
        "<p align='center'><b><a href='event:potion_"..i.."'>Buy"
      end
      local x, y = 50, 70
      ui.addTextArea(100, "", n, 5, 20, 790, 400, 0x324650, 0x000000, 0.8, true)
      for i, text in pairs(str) do
        ui.addTextArea(i + 100, text, n, x, y, 220, nil, 0x324650, 0x171918, 0.8, true)
        if x < 550 then x = x + 250 else x = 50 y = y + 90 end
      end
    end
  else
    ui.addTextArea(101, "<p align='center'><font face='Calibri' size='50'><a href='event:shop_weapons'>Weapons", n, 200, 100, 400, 78, 0x324650, 0x171918, 0.8, true)
    ui.addTextArea(102, "<p align='center'><font face='Calibri' size='50'><a href='event:shop_potions'>Potions", n, 200, 260, 400, 78, 0x324650, 0x171918, 0.8, true)
  end
  ui.addTextArea(#shop.potions + 101, "<p align='center'><a href='event:close'><b>X", n, 740, 370, 30, 20, 0x324650, 0x171918, 0.8, true)
end

function rect(id, x, y, w, h, c)
  tfm.exec.addPhysicObject(id, x, y, {type = 12, width = w, height = h, color = c or 0x6A7495, friction = 0, restitution = 0, foreground = true})
end

function setKeys(n)
  for i, key in pairs(keys) do
    tfm.exec.bindKeyboard(n, key, true, true)
    if settings.downKeys[key] then tfm.exec.bindKeyboard(n, key, false, true) end
  end
  -- Binding number keys 1-9.
  for key = 48, 57, 1 do
    tfm.exec.bindKeyboard(n, key, true, true)
  end
end

function setPlayer(n)
  players[n] = {
    -- Combat related;
    direction = 1,
    hearts = settings.defaultHealth,
    equipped = shop.sticks[1],
    stick = {Time = 0},
    shield = {Allow = true, Use = false, Time = 0},
    -- Shop related;
    bought = {},
    points = {Num = 0, Collected = {}},
    potions = {},
    -- Other;
    isInTeam = "",
    lastHitTime = 0,
    isSpectating = "",
  };
  for i, pot in pairs(shop.potions) do
    players[n].potions[pot.n] = {Num = 0, Use = false, id = i}
  end
  showHearts(n)
end

function showHearts(n, n2)
  local player = players[n]
  if not n2 then
    for n3, data in pairs(tfm.get.room.playerList) do
      if data.isDead and players[n3].isSpectating == n then showHearts(n, n3) end
    end
  end
  if player.hearts > 0 then
    local n = n2 or n

    ui.addTextArea(0, "", n, 10, 25, 270, 20, 0x324650, 0x89a7f5, 0.7, true)
    ui.addTextArea(1, "", n, 350, 25, 60, 20, 0x324650, 0x89a7f5, 0.7, true)
    ui.addTextArea(2, "", n, 470, 25, 320, 20, 0x324650, 0x89a7f5, 0.7, true)

    local heartBarLen = constrain(map(tonumber(player.hearts), 0, settings.defaultHealth, 0, 270), 30, 270)
    ui.addTextArea(3, "<p align='center'>"..player.hearts.." HP", n, 10, 25, heartBarLen, 20, 0x171918, 0x171918, 0.5, true)
    local pointBarLen = constrain(map(player.points.Num, 0, 16, 0, 60), 30, 60)
    ui.addTextArea(4, "<p align='center'><a href='event:open'>"..player.points.Num.." PT", n, 350, 25, pointBarLen, 20, 0x171918, 0x171918, 0.5, true)
    local str = "<p align='center'>"
    for i, pot in pairs(shop.potions) do
      if pot.n:find("und") == nil then
        local n = pot.n:sub(1, 3):upper()
        str = str.." <a href='event:use_"..i.."'>"..n.." "..player.potions[pot.n].Num.."</a>"
      end
    end
    ui.addTextArea(5, str, n, 470, 25, 320, 20, 0x171918, 0x171918, 0.5, true)
  end
end

function showParticle(particle, x, y)
  tfm.exec.displayParticle(tonumber(particle), tonumber(x), tonumber(y), (math.random(30) - 15) / 5, (math.random(10) - 5) / 5, 0, 0, nil)
end

function showPoints(i)
  if i and bnail[i] then
    local loc = bnail[i]
    for n in pairs(tfm.get.room.playerList) do
      if not players[n].points.Collected[i] then
        ui.addTextArea(i + 200, "<p align='center'><font size='16' color='#FFFFFF'>+1", n, loc.x - 20, loc.y - 15, nil, nil, 0x000000, 0x000000, nil, false)
      end
    end
  else
    for i, loc in ipairs(bnail) do ui.addTextArea(i + 200, "<p align='center'><font size='16' color='#FFFFFF'>+1", nil, loc.x - 20, loc.y - 15, nil, nil, 0x000000, 0x000000, nil, false) end
  end
end

function startRound()
  math.randomseed(os.time())
  fightTime = false
  teams = {}
  for n in pairs(tfm.get.room.playerList) do eventNewPlayer(n) system.bindMouse(n, false) end

  --[[
    Preventing the same maps from loading over and over.
    Temp map storage > Select map > Remove map from storage > Load map > Reset map storage if empty.
  ]]
  if #tempMaps == 0 then
    tempMaps = table.copy(maps)
  end
  local index = math.random(#tempMaps)
  currentMap = tempMaps[index]
  table.remove(tempMaps, index)

  currentMap.Mirror = false
  local randNum = math.random(1, 10)
  if randNum > 5 then currentMap.Mirror = true end

  tfm.exec.newGame(currentMap.XML, currentMap.Mirror)
end

function table.copy(t1)
  local t2 = {}
  for k, v in pairs(t1) do
    t2[k] = v
  end
  return t2
end

-- Giving out a translated output based on the action given. Uses the translation table.
function translate(action, n)
  local data = n and tfm.get.room.playerList[n].community or tfm.get.room.community

  return translations[data] and translations[data][action] or translations.en[action] or "Error."
end

--[[
  ui.addBotText to simplify showing text to the players.
  func parameter allows function to manipulate the translated text. i.e. For formatting.
]]
function ui.addBotText(action, n, func)
  if n == nil then
    for n in pairs(tfm.get.room.playerList) do
      local text = translate(action, n)
      if func then text = func(text) or text end

      ui.addTextArea(1000, "<v>[~Soupbot]<n> " .. text, n, 6, 380, nil, 30, 0x324650, 0x171918, 0.7, true)
    end
  else
    local text = translate(action, n)
    if func then text = func(text) or text end

    ui.addTextArea(1000, "<v>[~Soupbot]<n> " .. text, n, 6, 380, nil, 30, 0x324650, 0x171918, 0.7, true)
  end
end

function eventNewGame()
  for n in pairs(tfm.get.room.playerList) do
    local random = math.random
    tfm.exec.setPlayerScore(n, random(0, 1000), false)
    tfm.exec.movePlayer(n, random(100, currentMap.Width - 100), 80)
  end

  -- Points implementation.
  bnail = {}
  if tfm.get.room.xmlMapInfo then
    for object in tfm.get.room.xmlMapInfo.xml:gmatch("<O [^/]+/>") do
      local id = tonumber(object:match('C="(%d+)"'))
      if id == 11 then
        local x = tonumber(object:match('X="(%d+)"'))
        local y = tonumber(object:match('Y="(%d+)"'))
        if currentMap.Mirror then x = currentMap.Width - x end
        table.insert(bnail, {x = x, y = y})
      end
    end
    showPoints()
  end
  resetPoints = {Timer = 0}
  worldBorder = {loopCount = 0, Left = {x = -5}, Right = {x = currentMap.Width + 5}, Timer = 0}
  rect(0, currentMap.Width / 2, -5, currentMap.Width, 10)
  rect(1, worldBorder.Left.x, currentMap.Height / 2, worldBorder.Left.x * 2, currentMap.Height)
  rect(2, worldBorder.Right.x, currentMap.Height / 2, worldBorder.Left.x * 2, currentMap.Height)
  tfm.exec.setGameTime(3650)
end

function eventKeyboard(n, key, down, x, y)
  local data = tfm.get.room.playerList[n]
  if not data.isDead then
    local now = os.time()
    local player = players[n]
    local stat = stats[n]

    data.x = x
    data.y = y
    if settings.leftKeys[key] then
      player.direction = -1
      if player.potions.Swiftness.Use or player.potions.Mundo.Use then
        tfm.exec.movePlayer(n, 0, 0, false, -80, 0, false)
      end
    elseif settings.rightKeys[key] then
      player.direction = 1
      if player.potions.Swiftness.Use or player.potions.Mundo.Use then
        tfm.exec.movePlayer(n, 0, 0, false, 80, 0, false)
      end
    elseif settings.upKeys[key] and not data.isJumping then
      if player.potions.Leaping.Use or player.potions.Mundo.Use then
        tfm.exec.movePlayer(n, 0, 0, true, 0, -80, false)
      end
      data.isJumping = true
    elseif settings.downKeys[key] and fightTime then
      if down then
        if player.shield.Allow then
          player.shield.Use = true
          player.shield.Time = now
          ui.addBotText("usedShield", n)
        else
          ui.addBotText("cantShield", n)
          tfm.exec.playEmote(n, 2)
        end
      else
        player.shield.Use = false
        ui.addBotText("stoppedShield", n)
      end
      if player.potions.Levitation.Use or player.potions.Mundo.Use then
        tfm.exec.movePlayer(n, 0, 0, true, 0, 40, false)
      end
    elseif key == keys.space and fightTime then
      local stickCooldown = player.equipped.Cooldown
      if player.potions.Dexterity.Use or player.potions.Thundo.Use then
        stickCooldown = stickCooldown - 1
        if stickCooldown < 0.5 then stickCooldown = 0.5 end
      end

      if player.shield.Use then
        ui.addBotText("cantHit", n)
      elseif player.stick.Time < now - stickCooldown * 1000 then
        if player.equipped.n == "None" or player.equipped.n:sub(1, 4) == "Fist" then tfm.exec.playEmote(n, 15) else tfm.exec.playEmote(n, 11) end
        local dmg = player.equipped.Damage
        local range = player.equipped.Range
        local hitType = "normal"

        local stickTimer = player.stick.Time
        local msStickCooldown = stickCooldown * 1000
        if stickTimer < now - (msStickCooldown + 5000) then
          range = range * 1.5
          showParticle(26, data.x, data.y)
        elseif stickTimer < now - (msStickCooldown + 2500) then
          range = range * 1.25
        end

        for n2, data2 in pairs(tfm.get.room.playerList) do
          if n == n2 or (player.isInTeam ~= "" and teams[player.isInTeam][n2]) then
          elseif not data2.isDead then
            local player2 = players[n2]
            local xDist = math.abs(x - data2.x)
            local yDist = math.abs(y - data2.y)
            if xDist < range and yDist < range then
              if player.potions.Strength.Use or player.potions.Thundo.Use then
                dmg = dmg * (1 + (40 / 100))
              end
              if xDist < range / 3 and yDist < range / 3 then
                dmg = dmg
              elseif xDist < range / 2 and yDist < range / 2 then
                dmg = dmg * 0.75
              else
                dmg = dmg * 0.5
              end

              -- Shield timing and positioning logic.
              if player2.shield.Use then
                if data.isJumping then
                  local shieldCooldown = (player2.equipped.Cooldown + 1)
                  player2.shield.Allow = false
                  player2.shield.Use = false
                  ui.addBotText("criticalHit", n2, function(data) return format(data, shieldCooldown) end)
                  tfm.exec.playEmote(n2, 2)
                  tasks[now + (shieldCooldown * 1000)] = function() player2.shield.Allow = true ui.addBotText("criticalHitEnd", n2) end;
                  hitType = "critical"
                end
                local shieldPercentage = player2.equipped.shieldPercentage
                if player2.potions.Resistance.Use or player2.potions.Hundho.Use then
                  shieldPercentage = shieldPercentage + 40
                  if shieldPercentage > 100 then shieldPercentage = 100 end
                end
                local shieldTimer = player2.shield.Time
                if shieldTimer < now - 250 then
                  shieldPercentage = shieldPercentage * 0.5
                elseif shieldTimer < now - 500 then
                  shieldPercentage = shieldPercentage * 0.75
                end
                if player.direction == player2.direction then
                  shieldPercentage = shieldPercentage * 0.5
                end
                dmg = dmg * ((100 - shieldPercentage) / 100)
              end

              player2.hearts = player2.hearts - dmg
              player2.lastHitTime = now;
              stats[n2].Damage_Taken = stats[n2].Damage_Taken + dmg
              stat.Damage_Dealt = stat.Damage_Dealt + dmg
              stat.Hits = stat.Hits + 1
              ui.addBotText("hitSuccess", n, function(data) return format(data, hitType, n2, dmg) end)

              if player2.hearts <= 0 then
                tfm.exec.killPlayer(n2)
                ui.addBotText("deathMessages", nil, function(data) return n2 .. " " .. data[math.random(#data)] .. " " .. n end)
                stat.Kills = stat.Kills + 1

                player.points.Num = player.points.Num + player2.points.Num + 2
                player2.points.Num = 0
                for i, pot in pairs(player2.potions) do
                  player.potions[i].Num = player.potions[i].Num + pot.Num
                end
              else
                local knockback = (dmg + 4 + data.vx) * 10
                tfm.exec.movePlayer(n2, 0, 0, true, knockback * player.direction, data.isJumping and knockback or 0, true)
                showParticle(30, data2.x, data2.y)
              end

              if player2.potions.Thorns.Use then
                dmg = dmg * 0.5
                player.hearts = player.hearts - dmg
                if player.hearts <= 0 then tfm.exec.killPlayer(n) ui.addBotText("deathFromThorns", nil, function(data) return format(data, n, n2) end) end
                showHearts(n)
              end
              showHearts(n2)
            end
          end

          player.stick.Time = now
          tasks[now + (stickCooldown * 1000)] = function() ui.addBotText("canAttackAgain", n) end;
        end
      else
        ui.addBotText("cantAttack", n, function(data) return format(data, stickCooldown) end)
      end
    elseif key == keys.e then
      for i, loc in pairs(bnail) do
        local xDist = math.abs(x - loc.x)
        local yDist = math.abs(y - loc.y)
        if not player.points.Collected[i] and xDist < 20 and yDist < 20 then
          player.points.Collected[i] = true
          player.points.Num = player.points.Num + 1
          ui.removeTextArea(i + 200, n)
          showHearts(n)
          break
        end
      end
    elseif key >= 48 and key <= 57 then
      local i = tonumber(key) - 48
      if i <= #shop.potions then
        eventTextAreaCallback(0, n, "use_"..i)
      end
    end
  end
end

function eventMouse(n, x, y)
  local player = players[n]
  local data = tfm.get.room.playerList[n]
  if data.isDead then
    for n2, data2 in pairs(tfm.get.room.playerList) do
      local xDist = math.abs(x - data2.x)
      local yDist = math.abs(y - data2.y)
      if not data2.isDead and xDist < 40 and yDist < 40 then
        player.isSpectating = n2
        showHearts(n2, n)
        ui.addBotText("spectating", n, function(data) return format(data, player.isSpectating) end)
        break
      end
    end
  end
end

function eventLoop(passed, left)
  local now = os.time();
  for when, task in pairs(table.copy(tasks)) do
    if when <= now then
      tasks[when] = nil;
      task();
    end
  end

  if fightTime then
    resetPoints.Timer = (resetPoints.Timer + 0.5) % settings.resetPointsSpeed
    worldBorder.Timer = (worldBorder.Timer + 0.5) % settings.borderSpeed

    for n, data in pairs(tfm.get.room.playerList) do
      local player = players[n]
      if player.potions.Regeneration.Use or player.potions.Hundho.Use then
        player.hearts = player.hearts + settings.defaultRegen
        if player.hearts > settings.defaultHealth then player.hearts = settings.defaultHealth end
        showHearts(n)
        showParticle(31, data.x, data.y)
      end
      if player.potions.Levitation.Use then
        tfm.exec.movePlayer(n, 0, 0, true, 0, -40, false)
      end
    end

    if resetPoints.Timer == 0 then
      for n in pairs(tfm.get.room.playerList) do
        players[n].points.Collected = {}
      end
      showPoints()
      ui.addBotText("pointsRefilled", nil)
    end

    if worldBorder.Timer == 0 then
      worldBorder.loopCount = worldBorder.loopCount + 1
      if worldBorder.loopCount < math.floor(currentMap.Width / 80) then
        worldBorder.Left.x = worldBorder.Left.x + 15
        worldBorder.Right.x = worldBorder.Right.x - 15
        rect(1, worldBorder.Left.x, currentMap.Height / 2, worldBorder.Left.x * 2, currentMap.Height)
        rect(2, worldBorder.Right.x, currentMap.Height / 2, worldBorder.Left.x * 2, currentMap.Height)

        local leftBorderEdge = worldBorder.Left.x * 2
        local rightBorderEdge = worldBorder.Right.x - worldBorder.Left.x
        for n, data in pairs(tfm.get.room.playerList) do
          if not data.isDead then
            if data.x < leftBorderEdge or data.x > rightBorderEdge then
              tfm.exec.killPlayer(n)
              ui.addBotText("deathFromBorder", nil, function(data) return format(data, n) end)
            end
          end
        end
        for i, loc in pairs(bnail) do
          if loc.x < leftBorderEdge then
            loc.x = loc.x + 30
            showPoints(i)
          elseif loc.x > rightBorderEdge then
            loc.x = loc.x - 30
            showPoints(i)
          end
        end
      end
    end
  end

  if passed < settings.tillFightTimeStart * 1000 and not fightTime then
    local num = math.floor(settings.tillFightTimeStart - (passed / 1000))
    ui.setMapName(format(translate("gameStarting"), num) .. "\n")
    if num == 2 or num == 1 then
      ui.setMapName(translate("gameStart") .. "\n")
    elseif num == 0 then
      fightTime = true
      ui.setMapName(currentMap.n.." !")
    end
  end

  if left < 10000 then
    local num = math.floor(left / 1000)
    ui.setMapName("<VP>" .. format(translate("gameEnding", num)) .. " \n")
    if num < 1 then
      startRound()
    end
  end
end

function eventPlayerDied(n)
  tfm.exec.setPlayerScore(n, 0, false)
  stats[n].Deaths = stats[n].Deaths + 1

  local data = tfm.get.room.playerList[n]
  for i = 1, 5, 1 do -- Showing particle effects to where the player died.
    showParticle(5, data.x, data.y)
  end

  local alive, numAlive, aliveTeams, numTeams, alone = "", 0, {}, 0, 0
  for n, data in pairs(tfm.get.room.playerList) do
    if not data.isDead then
      alive = n
      numAlive = numAlive + 1

      local player = players[n]
      if player.isInTeam ~= "" then
        if not aliveTeams[player.isInTeam] then -- Add up the number of teams.
          aliveTeams[player.isInTeam] = {}
          numTeams = numTeams + 1
        end
        table.insert(aliveTeams[player.isInTeam], n)
      else
        alone = alone + 1
      end
    end
  end

  if numAlive == 1 then
    giveWin(alive)
    changeTime(30)
    ui.addBotText("lastPersonStanding", nil, function(data) return format(data, alive) end)
  elseif numAlive == 0 then
    changeTime(10)
  elseif numTeams == 1 and alone == 0 then -- If members of the alive team is left, give them victory.
    local team = players[alive].isInTeam
    for i, n in pairs(aliveTeams[team]) do
      local data = tfm.get.room.playerList[n]
      if not data.isDead then
        giveWin(n)
      end
    end
    changeTime(30)
    ui.addBotText("lastTeamStanding", nil, function(data) return format(data, team) end)
  else
    system.bindMouse(n, true)
  end
end

function eventPlayerWon(n)
  stats[n].Wins = stats[n].Wins + 1
end

function eventNewPlayer(n)
  if not stats[n] then
    stats[n] = {
      Wins = 0,
      Deaths = 0,
      Hits = 0,
      Kills = 0,
      Potions_Used = 0,
      Damage_Dealt = 0,
      Damage_Taken = 0,
    }
    eventChatCommand(n, "help")
  end
  setPlayer(n)
  setKeys(n)
end

function eventTextAreaCallback(id, n, cb)
  local player = players[n]
  local stat = stats[n]

  if cb:sub(1, 4) == "shop" then
    local page = cb:sub(6)
    openShop(n, page)
  elseif cb:sub(1, 5) == "stick" then
    local i = tonumber(cb:sub(7))
    if shop.sticks[i] then
      local item = shop.sticks[i]
      if not player.bought[item] then
        if player.points.Num >= item.Cost then
          player.bought[item] = true
          player.points.Num = player.points.Num - item.Cost
        else
          ui.addBotText("cantAfford", n, function(data) return format(data, item.n, item.Cost) end)
        end
      end
      if player.bought[item] then
        player.equipped = item
        ui.addBotText("equippedWeapon", n, function(data) return format(data, item.n) end)
        showHearts(n)
      end
    else
      ui.addBotText("doesntExist", n)
    end
  elseif cb:sub(1, 6) == "potion" then
    local i = tonumber(cb:sub(8))
    if shop.potions[i] then
      local item = shop.potions[i]
      if player.points.Num >= item.Cost then
        player.potions[item.n].Num = player.potions[item.n].Num + 1
        player.points.Num = player.points.Num - item.Cost
        ui.addBotText("boughtPotion", n, function(data) return format(data, item.n) end)
        showHearts(n)
      else
        ui.addBotText("cantAfford", n, function(data) return format(data, item.n, item.Cost) end)
      end
    else
      ui.addBotText("doesntExist", n)
    end
  elseif cb:sub(1, 3) == "use" then
    local i = tonumber(cb:sub(5))
    if shop.potions[i] then
      local item = shop.potions[i]
      if player.potions[item.n].Num > 0 then
        player.potions[item.n].Use = true
        player.potions[item.n].Num = player.potions[item.n].Num - 1
        stat.Potions_Used = stat.Potions_Used + 1
        ui.addBotText("usedPotion", n, function(data) return format(data, item.n, player.potions[item.n].Num) end)
        if item.n == "Healing" then
          player.hearts = player.hearts + 1
          if player.hearts > settings.defaultHealth then player.hearts = settings.defaultHealth end
        elseif item.n:find("und") == nil then
          tasks[os.time() + settings.potionEffectTime * 1000] = function() player.potions[item.n].Use = false ui.addBotText("usedPotionEnd", n, function(data) return format(data, item.n, player.potions[item.n].Num) end) end;
        end
        showHearts(n)
      else
        ui.addBotText("noPotion", n, function(data) return format(data, item.n) end)
        eventTextAreaCallback(0, n, "potion_"..i)
      end
    else
      ui.addBotText("doesntExist", n)
    end
  elseif cb == "open" then
    openShop(n)
  elseif cb == "close" then
    closeShop(n)
  end
end

function eventChatCommand(n, cmd)
  local arg = {}
  for args in cmd:gmatch("[^%s]+") do
    table.insert(arg, args:lower())
  end

  if admin[n] then
    if arg[1] == "time" and tonumber(arg[2]) then
      local time = tonumber(arg[2])
      tfm.exec.setGameTime(time)
    elseif arg[1] == "kill" and arg[2] then
      local n2 = tostring(capitalize(arg[2]))
      tfm.exec.killPlayer(n2)
    elseif arg[1] == "set" and arg[2] and tonumber(arg[3]) then
      local setting2 = tostring(arg[2])
      local num2 = tonumber(arg[3])
      for setting, num in pairs(settings) do
        if setting:lower():find(setting2) ~= nil and type(num) ~= "table" then
          if not tempSettings[setting] then tempSettings[setting] = num end
          ui.addBotText("setSetting", n, function(data) return format(data, setting, num2, tempSettings[setting]) end)
          settings[setting] = num2
          break;
        end
      end
    elseif tostring(arg[1]) and tonumber(arg[2]) then
      for n2 in pairs(tfm.get.room.playerList) do
        if capitalize(arg[1]) == n2 and players[n2] then
          local player2 = players[n2]
          if arg[3] and arg[3] == "false" then
            player2.points.Num = tonumber(arg[2])
          else
            player2.points.Num = player2.points.Num + tonumber(arg[2])
          end
          showHearts(n2)
          break
        end
      end
    end
  end

  if cmd == "help" or cmd == "info" then
    ui.addPopup(1, 0, translate("helpMenu", n), n, 150, 100, 500, true)
  elseif cmd == "commands" then
    ui.addPopup(1, 0, translate("commandsMenu", n), n, 140, 100, 520, true)
  elseif cmd == "controls" then
    ui.addPopup(1, 0, translate("controlsMenu", n), n, 150, 100, 500, true)
  elseif arg[1] == "stats" then
    local stat = stats[n]
    local n2 = arg[2] and tostring(capitalize(arg[2])) or n
    if n2 ~= "" and stats[n2] then stat = stats[n2] end
    local str = ""
    for name, num in pairs(stat) do
      str = str..""..name..": "..num.."<br>"
    end
    ui.addPopup(1, 0, "<font size='12' face='Calibri'><p align='center'>Stats for <b>"..n2.."</b></p><br>"..str, n, 250, 100, 300, true)
  elseif arg[1] == "profile" and arg[2] then
    eventChatCommand(n, "stats "..arg[2])
  elseif cmd == "shop" then
    openShop(n)
  elseif cmd == "weapon" then
    local weapon = players[n].equipped
    ui.addBotText("weaponsDescribe", n, function(data) return format(data, weapon.n, weapon.Cooldown, weapon.Range) end)
  elseif (arg[1] == "join" or arg[1] == "team") and arg[2] and players[n].isInTeam == "" and players[n].lastHitTime < os.time() - 30 * 1000 then
    local team = tostring(capitalize(arg[2]))
    if teams[team] then
      local data = tfm.get.room.playerList[n]
      for n2 in pairs(teams[team]) do
        local data2 = tfm.get.room.playerList[n2]
        local xDist = math.abs(data.x - data2.x)
        local yDist = math.abs(data.y - data2.y)
        if xDist < 40 and yDist < 40 then
          teams[team][n] = true
          players[n].isInTeam = team
          ui.addBotText("joinedTeam", n, function(data) return format(data, team, n2) end)
          break;
        end
      end
      if not players[n].isInTeam == team then ui.addBotText("cantJoinTeam", n, function(data) return format(data, team) end) end
    else
      teams[team] = {}
      teams[team][n] = true
      players[n].isInTeam = team
      ui.addBotText("createdTeam", n, function(data) return format(data, team) end)
    end
  elseif arg[1] == "leave" and arg[2] and players[n].isInTeam ~= "" then
    local team = tostring(capitalize(arg[2]))
    if teams[team] and teams[team][n] then
      teams[team][n] = false
      players[n].isInTeam = ""
      ui.addBotText("You are no longer in a team!", n)
      ui.addBotText("leaveTeam", n)
    else
      ui.addBotText("noExistTeam", n)
    end
  elseif (arg[1]:sub(1, 5) == "stick" or arg[1]:sub(1, 6) == "potion" or arg[1] == "use") and arg[2] then
    local toFind, id = tostring(capitalize(arg[2])), 1000
    local items = arg[1] == "stick" and "sticks" or "potions"
    for i, item in pairs(shop[items]) do
      if item.n:sub(1, toFind:len()) == toFind then id = i break end
    end
    eventTextAreaCallback(0, n, arg[1].."_"..id)
  end
end

main()